(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    126095,       2918]
NotebookOptionsPosition[    110548,       2663]
NotebookOutlinePosition[    110933,       2680]
CellTagsIndexPosition[    110890,       2677]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData["Quit"], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7322669240879383`*^9, 3.732266924515356*^9}, 
   3.732340874202277*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"da8c97eb-8d4c-4992-89db-e1c3a930946e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PDA", "@", "EE"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"PacletDirectoryAdd", " ", "ExternalEvaluate`"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PDA", "@", "ZMQ"}], ";", 
  RowBox[{"(*", 
   RowBox[{"PacletDirectoryAdd", " ", "ZMQLink`"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"PDA", "@", "WCFP"}], ";", 
  RowBox[{"(*", 
   RowBox[{"PacletDirectoryAdd", " ", "WolframClientForPython`"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
  "Get", "@", 
   "\"\</Users/dorianb/Work/Mathematica/Workspaces/wolframclientforpython/\
PacletInfo.m\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "@", "EE", " ", 
  RowBox[{"(*", 
   RowBox[{"Get", " ", "ExternalEvaluate`"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.736763283128585*^9, 3.736763292853499*^9}, {
  3.736763507996832*^9, 3.7367635090518503`*^9}, {3.736763625833147*^9, 
  3.736763638311357*^9}, {3.736763809564937*^9, 3.736763836399716*^9}, {
  3.73720154812446*^9, 
  3.737201609505281*^9}},ExpressionUUID->"5ff3b530-b676-4fd5-a6c4-\
1b54da4f6705"],

Cell[BoxData[
 TemplateBox[{
  "Name","shdw",
   "\"Symbol \\!\\(\\*RowBox[{\\\"\\\\\\\"Name\\\\\\\"\\\"}]\\) appears in \
multiple contexts \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"WebUnit`\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Global`\\\\\\\"\\\"}], \\\"}\\\"}]\\); definitions in context \\!\
\\(\\*RowBox[{\\\"\\\\\\\"WebUnit`\\\\\\\"\\\"}]\\) may shadow or be shadowed \
by other definitions.\"",2,5,1,17744756386298594075,"Local","WebUnit`Name"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.736765447602785*^9, 3.736765532047359*^9, 
  3.736765576486248*^9, 3.736767567035541*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"ab9b6386-95bd-426d-88e8-7998e5bb627f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Python Client Library", "Title",
 CellChangeTimes->{{3.73226547444238*^9, 
  3.7322654781843853`*^9}},ExpressionUUID->"63a46957-ee56-4d9b-9324-\
10fb441ac525"],

Cell[CellGroupData[{

Cell["Calling API:", "Chapter",
 CellChangeTimes->{{3.7322654815041113`*^9, 
  3.732265483352069*^9}},ExpressionUUID->"0f2b1007-a999-4854-8987-\
0db77cdc77ef"],

Cell[CellGroupData[{

Cell["Initialization:", "Subsection",
 CellChangeTimes->{{3.732267893122678*^9, 
  3.732267895904932*^9}},ExpressionUUID->"b2bb1867-ef09-470d-a56f-\
67a717f418fb"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Indicate library path to Python interpreter:", \
"Text"]], "Item",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.7322675445524473`*^9, {3.732340864141633*^9, 
   3.7323408742020273`*^9}},ExpressionUUID->"9bd95203-f718-4dd0-b6ae-\
54608c23e2ee"],

Cell["\<\
import sys
sys.version\
\>", "ExternalLanguage",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.736762540558639*^9, 3.736762549609076*^9}, {
   3.736765587061058*^9, 3.736765588602079*^9}, 3.7367656465768747`*^9},
 CellLabel->
  "In[102]:=",ExpressionUUID->"cc5c30cc-aa4f-49ba-96b2-2a8a48e08e75"]
}, Closed]],

Cell[BoxData["\<\"3.6.5 (default, May 10 2018, 15:36:57) \\n[GCC 4.2.1 \
Compatible Apple LLVM 9.1.0 (clang-902.0.39.1)]\"\>"], "Output",
 CellChangeTimes->{
  3.736764203018914*^9, 3.736765088116214*^9, {3.73676543546716*^9, 
   3.7367654527018747`*^9}, 3.736765535270255*^9, {3.7367655830773277`*^9, 
   3.736765589121162*^9}, 3.73720162645395*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"65ec09db-013a-4cf2-8cd0-1df8ebfc2c19"],

Cell["Simplify exposed namespaces", "Text",
 CellChangeTimes->{{3.736768657540345*^9, 
  3.736768665923752*^9}},ExpressionUUID->"795279a2-2d9a-401f-b6ca-\
2dc67f4405df"],

Cell[CellGroupData[{

Cell["Eventually load the local version of the client library:", "Item",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7367656103382587`*^9, 3.7367656366888943`*^9}, {
  3.737201645850074*^9, 
  3.737201647089861*^9}},ExpressionUUID->"55c29c2e-dda8-42a2-944f-\
eea8d8225c65"],

Cell["\<\
import sys
sys.path.insert(0, \
'/Users/dorianb/Work/Mathematica/Workspaces/WolframClientForPython')\
\>", "ExternalLanguage",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7322656359406548`*^9, 3.732265648251791*^9}, 
   3.732340874252322*^9, 3.737201634607926*^9},
 CellLabel->
  "In[118]:=",ExpressionUUID->"1c5ec67d-246b-452f-85b3-f50a8ee4985b"]
}, Open  ]],

Cell[TextData[{
 "Some utility code to load user credentials from a file and avoid leaking \
personal information. ",
 StyleBox["Update the file path",
  FontWeight->"Bold"],
 " ",
 StyleBox["user_config_file",
  FontSlant->"Italic"],
 " before executing."
}], "Item",
 CellChangeTimes->{{3.737201686749164*^9, 
  3.737201751530249*^9}},ExpressionUUID->"36e2771f-3270-487c-b1c8-\
f99c801da319"],

Cell["\<\
from wolframclient import UserIDPassword, WolframCloudSession
import json

user_config_file = '/etc/testing-account-credentials.json'
with open(user_config_file, 'r') as fp:
\tjson_user_config = json.load(fp)

user_cred = UserIDPassword(
\tjson_user_config['User']['id'],
\tjson_user_config['User']['password'])\
\>", "ExternalLanguage",
 CellChangeTimes->{{3.736763157764974*^9, 3.736763159652499*^9}, 
   3.7367631940581903`*^9, {3.7367657024700193`*^9, 3.736765739898151*^9}, {
   3.736765787338122*^9, 3.736765822738874*^9}, {3.736768587579492*^9, 
   3.736768600894878*^9}, {3.736768753728109*^9, 3.736768760000064*^9}, 
   3.736768835495471*^9, {3.737201652964381*^9, 3.73720168386589*^9}, {
   3.7372017806519957`*^9, 3.7372018495772743`*^9}, {3.737201885079681*^9, 
   3.737201885460618*^9}},ExpressionUUID->"230b09a3-c187-4eb2-96e3-\
94e158a71552"],

Cell["Call the API", "Item",
 CellChangeTimes->{{3.737201822499374*^9, 
  3.7372018284103603`*^9}},ExpressionUUID->"9c44f482-6db3-4520-9628-\
a865af7c6768"],

Cell[CellGroupData[{

Cell["\<\
session = WolframCloudSession(authentication=user_cred)

api = ('dorianb@wolfram.com', 'api/public/plus')

api_call=session.call(api, {'i': 1, 'j': 2})

if api_call.success:
    result = api_call.output
else:
    result = api_call.failure
    
force_text(result)\
\>", "ExternalLanguage",
 CellChangeTimes->{{3.737201791041741*^9, 3.737201791297488*^9}, {
  3.737201851026993*^9, 
  3.7372018837918663`*^9}},ExpressionUUID->"4557edd1-412c-4a44-9017-\
8052249fd894"],

Cell[BoxData["\<\"3\"\>"], "Output",
 CellChangeTimes->{{3.737201829406486*^9, 3.737201858395939*^9}},
 CellLabel->
  "Out[110]=",ExpressionUUID->"64af8960-d5eb-4764-b990-02f4379b7fff"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step by step explaination of the above code:", "Subsection",
 CellChangeTimes->{{3.737201928624238*^9, 
  3.737201936868821*^9}},ExpressionUUID->"e1aa650d-3346-4c0a-9832-\
e3d94aca883a"],

Cell["Import useful public classes:", "Item",
 CellChangeTimes->{{3.732265983511056*^9, 3.7322659922477617`*^9}, {
  3.736765837831573*^9, 3.736765852332893*^9}, {3.737201903008587*^9, 
  3.737201910293736*^9}},ExpressionUUID->"4ccc8b5a-509c-4a34-a4ef-\
7e322926be03"],

Cell["\<\
from wolframclient import UserIDPassword, WolframCloudSession\
\>", "Program",
 CellChangeTimes->{{3.73676317406705*^9, 3.736763177223984*^9}, {
  3.737201868768856*^9, 
  3.7372018968732357`*^9}},ExpressionUUID->"611f0a66-4316-41ba-921d-\
ce53440d7eda"],

Cell["Import utility classes:", "Item",
 CellChangeTimes->{{3.732265983511056*^9, 3.7322659922477617`*^9}, {
  3.736765837831573*^9, 3.736765852332893*^9}, {3.736765888307496*^9, 
  3.7367658890277433`*^9}},ExpressionUUID->"98d716de-40f2-46ab-a4c0-\
b462701d9b4c"],

Cell["\<\
from wolframclient.utils.encoding import force_text
import json\
\>", "Program",
 CellChangeTimes->{{3.736765869991582*^9, 
  3.7367658784412317`*^9}},ExpressionUUID->"c5f653e1-6c95-48e4-ac04-\
8b1a4df6904b"],

Cell["\<\
Specify the config file with user credentials and load its JSON content:\
\>", "Item",
 CellChangeTimes->{{3.732266022037964*^9, 3.732266026414901*^9}, {
  3.732266167442211*^9, 3.732266177370278*^9}, {3.736765925289856*^9, 
  3.7367659298738327`*^9}},ExpressionUUID->"d3d425da-2269-46cb-82c3-\
507545a48650"],

Cell["\<\
user_config_file = '/etc/testing-account-credentials.json'
with open(user_config_file, 'r') as fp:
\tjson_user_config = json.load(fp)\
\>", "Program",
 CellChangeTimes->{
  3.736763145554269*^9, 3.736763198270981*^9, {3.73676592249824*^9, 
   3.7367659238914547`*^9}},ExpressionUUID->"c80ea0ce-80e1-4aba-9fc8-\
cb40d296cde3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "@", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\</etc/testing-account-credentials.json\>\"", ",", "\"\<RawJSON\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.732266027548862*^9, 3.73226607310721*^9}, {
  3.732266151253228*^9, 3.732266152322626*^9}, {3.736763206672879*^9, 
  3.736763232904026*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"75b43d46-ed09-4730-8933-71beb009e4e5"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 2, "Length" -> 2, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Assoc[TypeSystem`AnyType, 
           TypeSystem`Atom[String], 2], 2], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`KeyValueShape[
              TypeSystem`PackageScope`UnknownShape, 
               TypeSystem`PackageScope`AtomShape[422.4000000000001]]], 2, {
             All}]]], 2, {}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1520829694], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Assoc[TypeSystem`AnyType, 
           TypeSystem`Atom[String], 2], 2], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[1520829694]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["User", 
                    Style[
                    "User", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 871812024][{
                    
                    Key["User"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[871812024][
                   GeneralUtilities`Slice[
                    Key["User"]]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation["id", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   871812024][
                    GeneralUtilities`Slice[
                    Key["User"], 
                    Key["id"]]], "Mouse"], 
                  ImageSize -> {{19.200000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["wpc_prd03@outlook.com", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[871812024][
                 
                  GeneralUtilities`Slice[
                   Key["User"], 
                   Key["id"]]], "Mouse"], 
                ImageSize -> {{422.4000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Pane[
                 Pane[
                  Annotation["password", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   871812024][
                    GeneralUtilities`Slice[
                    Key["User"], 
                    Key["password"]]], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["writesting&", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[871812024][
                 
                  GeneralUtilities`Slice[
                   Key["User"], 
                   Key["password"]]], "Mouse"], 
                ImageSize -> {{422.4000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["SAK", 
                    Style[
                    "SAK", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 871812024][{
                    
                    Key["SAK"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[871812024][
                   GeneralUtilities`Slice[
                    Key["SAK"]]], "Mouse"], 
                 ImageSize -> {{38.400000000000006`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation["consumer_key", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   871812024][
                    GeneralUtilities`Slice[
                    Key["SAK"], 
                    Key["consumer_key"]]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["42FmMBhhGfxGo5SxU1Zm3mBqptOcBhJHtNto6cxqSJI=", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[871812024][
                 
                  GeneralUtilities`Slice[
                   Key["SAK"], 
                   Key["consumer_key"]]], "Mouse"], 
                ImageSize -> {{422.4000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Pane[
                 Pane[
                  Annotation["consumer_secret", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   871812024][
                    GeneralUtilities`Slice[
                    Key["SAK"], 
                    Key["consumer_secret"]]], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["8z9eI1PbkbBix2AQP/VjjHnk6p/BJ8iVRcxK1jmjGEs=", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[871812024][
                 
                  GeneralUtilities`Slice[
                   Key["SAK"], 
                   Key["consumer_secret"]]], "Mouse"], 
                ImageSize -> {{422.4000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 871812024][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 871812024]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[871812024][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[871812024][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {636., {57.134033203125, 62.865966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.736763210495247*^9, 3.736763233229711*^9}},
 CellLabel->"Out[9]=",ExpressionUUID->"4821b2dd-a4b3-4f6e-b54f-a37102b7c679"]
}, Open  ]],

Cell["\<\
Build credential for the testing user and start an authenticated cloud \
session targeting our public cloud.\
\>", "Item",
 CellChangeTimes->{{3.732266706327388*^9, 3.7322667307101507`*^9}, {
  3.7322675695183897`*^9, 3.73226757130968*^9}, {3.7322676755760727`*^9, 
  3.732267686263979*^9}},ExpressionUUID->"d38102dd-8d96-4b90-9f67-\
f9faf3d95380"],

Cell["\<\
user_cred = UserIDPassword(
\tjson_user_config['User']['id'],
\tjson_user_config['User']['password']
\t)\
\>", "Program",
 CellChangeTimes->{{3.7367659657253513`*^9, 3.7367659715201883`*^9}, {
  3.737201949918173*^9, 
  3.737201952980341*^9}},ExpressionUUID->"32725ede-324d-4927-a263-\
5cdbc0232031"],

Cell["\<\
Define an authenticated session to our public cloud (default)\
\>", "Item",
 CellChangeTimes->{{3.73676605058834*^9, 
  3.736766111681759*^9}},ExpressionUUID->"e8fc5fff-6cc8-47fa-bd1f-\
8fd99eff111d"],

Cell["session = WolframCloudSession(authentication=user_cred)", "Program",
 CellChangeTimes->{
  3.736766023562619*^9},ExpressionUUID->"78195558-cc67-4b81-849f-\
456136dee505"],

Cell["One way to specify the API:", "Item",
 CellChangeTimes->{{3.732266706327388*^9, 3.7322667307101507`*^9}, {
  3.7322675695183897`*^9, 3.73226757130968*^9}, {3.7322676755760727`*^9, 
  3.73226769807514*^9}, {3.7367661177616043`*^9, 
  3.736766146584161*^9}},ExpressionUUID->"ba26491d-e509-4843-9ca1-\
87eae0c009a0"],

Cell["api = ('dorianb@wolfram.com', 'api/public/plus')", "ExternalLanguage",
 CellChangeTimes->{{3.732267512258976*^9, 3.732267512551017*^9}, 
   3.732267701397423*^9, {3.732267784987097*^9, 3.732267824590692*^9}, 
   3.736766122480255*^9},ExpressionUUID->"43ad247d-7d1c-490e-a2ef-\
a10a1acec96a"],

Cell["Make the call and get the result:", "Item",
 CellChangeTimes->{{3.732267831101809*^9, 
  3.732267857014338*^9}},ExpressionUUID->"64dfa841-5ce5-41a4-a98b-\
ada98ae1002c"],

Cell["\<\
api_call=session.call(api, {'i': 1, 'j': 2})

if api_call.success:
    result = api_call.output
else:
    result = api_call.failure\
\>", "Program",
 CellChangeTimes->{{3.736766168451531*^9, 
  3.736766169256432*^9}},ExpressionUUID->"a481643b-2565-4760-938a-\
e4adacba78d3"],

Cell["Finally return a string output, since default is bytes:", "Item",
 CellChangeTimes->{{3.736766183360134*^9, 
  3.736766192902137*^9}},ExpressionUUID->"a427dacd-3353-4ab8-a6e4-\
955aa670e9e6"],

Cell["force_text(result)", "Program",
 CellChangeTimes->{
  3.736766199412702*^9},ExpressionUUID->"54022589-be09-4683-bde2-\
be961fb196ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Permissions granted to SAK and User.", "Subsection",
 CellChangeTimes->{{3.732267982114417*^9, 3.7322679890493717`*^9}, {
  3.732364979725415*^9, 
  3.7323649990829363`*^9}},ExpressionUUID->"dfb01a05-4803-4985-a8a2-\
48119b0db8f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", 
  RowBox[{
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/dorianb/api/private/\
stringreverse\"",
       "https://www.wolframcloud.com/objects/dorianb/api/private/\
stringreverse"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/dorianb/api/private/stringreverse"],
    
    SelectWithContents->True], ",", "Permissions"}], "]"}]], "Input",
 CellChangeTimes->{{3.73226813390821*^9, 3.7322681390009813`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"b9c76a4c-ef64-4095-8ac4-1df3ac85c607"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Permissions", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"wpc_prd03@outlook.com\"\>", "\[Rule]", 
      RowBox[{"{", "\<\"Execute\"\>", "}"}]}], ",", 
     RowBox[{"\<\"Owner\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\<\"Read\"\>", ",", "\<\"Write\"\>", ",", "\<\"Execute\"\>"}],
        "}"}]}], ",", 
     RowBox[{
      RowBox[{"ApplicationIdentificationKey", "[", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{"\<\"ConsumerKey\"\>", 
         "\[Rule]", "\<\"42FmMBhhGfxGo5SxU1Zm3mBqptOcBhJHtNto6cxqSJI=\"\>"}], 
        "\[RightAssociation]"}], "]"}], "\[Rule]", 
      RowBox[{"{", "}"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.732268139874406*^9, 3.732268929186782*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"789bd579-87ce-4940-b986-87337cdfd4c1"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Bad request :", "Subsection",
 CellChangeTimes->{{3.732364981760947*^9, 
  3.732364983943149*^9}},ExpressionUUID->"3b4ad246-197e-4aac-a374-\
19f4535adc60"],

Cell[CellGroupData[{

Cell["\<\
url = APIUtil.user_api_url('dorianb', 'api/private/stringreverse')
api_call = session.call(url, input_parameters={'i': '3'})

if api_call.success:
\tresult = api_call.output
else:
\tresult = api_call.failure

result\
\>", "ExternalLanguage",
 CellChangeTimes->{{3.732267826801206*^9, 3.7322678270118933`*^9}, {
  3.7322679414004173`*^9, 3.7322679536959457`*^9}, {3.732268035194028*^9, 
  3.732268084120287*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"6438af36-83fc-4a6b-af1f-d732b6350e9f"],

Cell[BoxData["\<\"The API could not be evaluated because there is no input \
for fields: \\\"str\\\".\"\>"], "Output",
 CellChangeTimes->{3.7322682535241337`*^9, 3.7322689300016317`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"c8d60b2f-c8f2-45d0-8860-6c6926ce747b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
url = APIUtil.user_api_url('dorianb', 'api/private/stringreverse')
api_call = session.call(url, input_parameters={'str': 'abcde'})

if api_call.success:
\tresult = api_call.output
else:
\tresult = api_call.failure

result\
\>", "ExternalLanguage",
 CellChangeTimes->{{3.732268265720006*^9, 3.732268270733293*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"38fd23e4-81e9-47d1-941f-2d435b7ddc39"],

Cell[BoxData["\<\"\\\"edcba\\\"\"\>"], "Output",
 CellChangeTimes->{3.732268272802287*^9, 3.732268930640473*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"d7aadcf4-2724-4cd3-84b5-65914122cbe6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Retrieving JSON encoded output", "Subsection",
 CellChangeTimes->{{3.732268287081786*^9, 3.732268288334831*^9}, {
  3.732268390743834*^9, 
  3.732268401576336*^9}},ExpressionUUID->"34aa431b-2fd2-4fd3-8904-\
aa87ac1f8f5c"],

Cell[BoxData[
 RowBox[{"APIFunction", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<max\>\"", "\[Rule]", "\"\<Integer\>\""}], ",", 
     RowBox[{"\"\<min\>\"", "\[Rule]", 
      RowBox[{"\"\<Integer\>\"", "\[Rule]", "1"}]}], ",", 
     RowBox[{"\"\<step\>\"", "\[Rule]", 
      RowBox[{"\"\<Integer\>\"", "\[Rule]", "1"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"#min", ",", "#max", ",", "#step"}], "]"}], "&"}], ",", 
   "\[IndentingNewLine]", "\"\<JSON\>\""}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.732269678023809*^9, 
  3.7322696897514067`*^9}},ExpressionUUID->"bd344ddc-1653-4c51-839b-\
152659bc4561"],

Cell["from json import loads as json_loads", "ExternalLanguage",
 CellChangeTimes->{{3.73226855649331*^9, 3.732268564505025*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"a41d7087-45cb-4179-a0fa-b5e0d60ce2c3"],

Cell[CellGroupData[{

Cell["\<\
url = APIUtil.user_api_url('dorianb', 'api/private/range/formated/json')
api_call = session.call(
\turl, 
\tinput_parameters={'max': 10},
\tdecoder=json_loads)

if api_call.success:
\tresult = api_call.output
else:
\tresult = api_call.failure

result\
\>", "ExternalLanguage",
 CellChangeTimes->{{3.732268409887957*^9, 3.732268415875132*^9}, {
  3.732268472628358*^9, 3.7322684876512823`*^9}, {3.732268544697777*^9, 
  3.7322685680000877`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"b91605cc-0168-4580-aba2-3ca4c2834489"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{
  3.732268579498201*^9, 3.732268758793038*^9, {3.732268905490202*^9, 
   3.732268931289831*^9}, 3.732269058295611*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"2c2febe7-93f1-419b-a861-e3c7a7627a97"]
}, Open  ]],

Cell[CellGroupData[{

Cell["api_call.response.text", "ExternalLanguage",
 CellChangeTimes->{{3.732268940113968*^9, 3.732268947159176*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"89b3e685-c8c6-4519-8303-76389dd2410d"],

Cell[BoxData["\<\"[\\n\\t1,\\n\\t2,\\n\\t3,\\n\\t4,\\n\\t5,\\n\\t6,\\n\\t7,\\\
n\\t8,\\n\\t9,\\n\\t10\\n]\"\>"], "Output",
 CellChangeTimes->{3.732268947564823*^9, 3.732269064305174*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"61fe04aa-c70b-402e-b394-3d679a82c3e6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Get output as bytes:", "Subsection",
 CellChangeTimes->{{3.732269722079092*^9, 3.7322697295094213`*^9}, {
  3.73236508994281*^9, 
  3.732365098958268*^9}},ExpressionUUID->"fee5d5b9-1ee4-4146-8208-\
af02b8295ba2"],

Cell[CellGroupData[{

Cell["\<\
url = APIUtil.user_api_url('dorianb', 'api/private/range/formated/json')
api_call = session.call(
\turl, 
\tinput_parameters={'max': 3},
\tdecoder=None)

if api_call.success:
\tresult = api_call.output
else:
\tresult = api_call.failure

result\
\>", "ExternalLanguage",
 CellChangeTimes->{{3.732269754662766*^9, 3.7322697627719793`*^9}, {
  3.7322698262768717`*^9, 3.732269827723105*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"0b66d9bf-4192-4a36-bc91-45273a25699c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ByteArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"14 bytes\"", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"14 bytes\"", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ByteArray[{91, 10, 9, 49, 44, 10, 9, 50, 44, 10, 9, 51, 10, 93}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.732269764588995*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"f3985b90-7614-4ba3-a028-bd6911b294e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ByteArrayToString", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.732269770043826*^9, 3.732269805631959*^9}, 
   3.732365144518731*^9},ExpressionUUID->"6155b027-6655-4366-a798-\
b4e72273bcd9"],

Cell[BoxData["\<\"[\\n\\t1,\\n\\t2,\\n\\t3\\n]\"\>"], "Output",
 CellChangeTimes->{{3.732269773411037*^9, 3.732269806056991*^9}},
 CellLabel->"Out[24]=",ExpressionUUID->"d90c62b0-f4ce-45e2-97c7-ee5511fb03a6"]
}, Open  ]],

Cell["\<\
Example transferring the data of a PNG image. Note there is no built-in \
library for image in Python.\
\>", "Item",
 CellChangeTimes->{{3.732270163082988*^9, 
  3.732270216159639*^9}},ExpressionUUID->"ee6db7fe-87d7-45c3-9c1f-\
4115681e945d"],

Cell[CellGroupData[{

Cell["\<\
url = APIUtil.user_api_url('dorianb', 'api/private/randomimage')
api_call = session.call(
\turl, 
\tdecoder=None)

if api_call.success:
\tresult = api_call.output
else:
\tresult = api_call.failure

result\
\>", "ExternalLanguage",
 CellChangeTimes->{{3.732269754662766*^9, 3.7322697627719793`*^9}, {
  3.7322698262768717`*^9, 3.7322698660251207`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"2788f958-4fa8-4317-9b64-bb62fabef562"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ByteArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"408 bytes\"", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"408 bytes\"", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ByteArray[CompressedData["
1:eJxTTMoPSmJkYGCYASQ6A/zcebmkuIBcXk8PlyAgzQzCAkxAsvPWv9VAqrUq
JKIkKLFcoaAoPy0zJ1WhpLIgVSG1IjONgaHiVmj3Qd7DBjzM/2ctUj6xyefW
Y4lO5pTmvvhdb9W/K2g2bvm6T7+69mXmzRuGDOKWRUdCXvxbvOO6Em/lv/jL
8impCxZKBE97qNJWFD5pUav5o0OMKyIK2p4rxiuYMpcvPrf39hEju9fcod9f
5sn/rFDf9H7ROzaggzgLPCKLGRi4hUGYkWHWHAmgoE2Ja0RJcH5aSXliUSqD
c1FqYklqikJ5ZkmGQklGqkJ4fk5aUWKugk9iXnppYnqqgpVCeXm5XjlEWC85
Pzdm0bJWoDmKIHPA2jPz8xRCMnNTGYwMDC2sDEysDCwVDE2tTIysDC3WPwwH
2s7g4uniGMIxk9GS4dh/Ru3f3cesp8gpSpwUUJny/XSJ0hoGdllVgbl+ew68
KG+xkHvKqKzxgiHtE7uk/Q0XtW1nc+O4ZRift+zrExe7Z8V9ZxXQPAZPVz+X
dU4JTQCnbJZF
   "]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.732269764588995*^9, 3.732269869570511*^9, {3.732269909039422*^9, 
   3.732269963587579*^9}, {3.732270093970066*^9, 3.7322701388993196`*^9}},
 CellLabel->"Out[51]=",ExpressionUUID->"ee9a9516-d994-4d72-a29b-c6e590659b4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImportByteArray", "[", 
  RowBox[{"%", ",", "\"\<PNG\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7322698711937*^9, 3.7322698805765657`*^9}, 
   3.732270102858694*^9},
 CellLabel->"In[52]:=",ExpressionUUID->"88376c59-ce41-4f90-a3cc-38da549a00a5"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[
    RawArray["UnsignedInteger16",{{{11259, 35782, 15252}, {18716, 41871, 
     19384}, {56595, 28163, 28004}}, {{1821, 9488, 40270}, {48320, 59511, 
     33848}, {7909, 291, 10472}}, {{26354, 1817, 16344}, {17446, 46797, 
     27998}, {2844, 487, 33982}}}], {{0, 3}, {3, 0}}, {0, 65535},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Bit16", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "Software" -> "Created with the Wolfram Language : www.wolfram.com"], 
      "Comments" -> 
      Association[
       "Software" -> "Created with the Wolfram Language : www.wolfram.com", 
        "Creation Time" -> 
        DateObject[{2018, 4, 9, 15, 42, 18.}, "Instant", "Gregorian", 2.]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{3, 3},
  PlotRange->{{0, 3}, {0, 3}}]], "Output",
 CellChangeTimes->{{3.732270111636278*^9, 3.732270139787614*^9}},
 CellLabel->"Out[52]=",ExpressionUUID->"5d205a03-cf4c-4358-95af-5a1a8954013d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Secured Authentication Key", "Subsection",
 CellChangeTimes->{{3.732270232631959*^9, 
  3.732270238814439*^9}},ExpressionUUID->"93e14716-3ee7-4e68-a8a8-\
e757ab6a6370"],

Cell["Check for the SAK:", "Item",
 CellChangeTimes->{{3.732270582710669*^9, 
  3.732270585724307*^9}},ExpressionUUID->"ba7c913b-8f98-4b1d-aafb-\
599170239ba6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudConnect", "[", 
  RowBox[{"\"\<wpc_prd03@outlook.com\>\"", ",", " ", "\"\<writesting&\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.732270386985512*^9, 3.7322704180805283`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"1c14c9e4-5cd3-4e2a-baf0-7af39df93625"],

Cell[BoxData["\<\"wpc_prd03@outlook.com\"\>"], "Output",
 CellChangeTimes->{{3.732270404648896*^9, 3.732270420075795*^9}},
 CellLabel->"Out[56]=",ExpressionUUID->"51f17773-1448-4a59-be56-0d2f631855e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SecuredAuthenticationKeys", "[", "]"}]], "Input",
 CellChangeTimes->{{3.732270423432097*^9, 3.732270426567442*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"0d3c48f3-0d60-493b-91aa-396217ba8641"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   RowBox[{
    TagBox["SecuredAuthenticationKey",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
     
     TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               Evaluator -> Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{
               Thickness[0.03333333333333333], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                   0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                   3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                   0}, {1, 3, 3}}}, {{{7.539000000000001, 9.105}, {5.762, 
                   9.105}, {4.319999999999999, 10.543}, {4.319999999999999, 
                   12.324}, {4.319999999999999, 14.102}, {5.762, 15.543}, {
                   7.539000000000001, 15.543}, {9.32, 15.543}, {10.758, 
                   14.102}, {10.758, 12.324}, {10.758, 10.543}, {9.32, 
                   9.105}, {7.539000000000001, 9.105}}, CompressedData["
1:eJxTTMoPSmViYGDQAmIQvch12+e/ISYORhxrZKKeSDucXggUiEXwnbtznv/2
NIXzNWP6D33lMHM47m3e6fhADs6/UvFSzdBDEc5/vHT2EYUNKg6fLvkmCUSY
Y/Bh6mF8mHlgvoQF3L7sPSWTJVgs4fwpEixhfLwIPg+TdrvYTwQfrH+HFap5
QD6KfUA+zD0uIP9xWsP5zy4o3f4pZwPnM4CBLYRfoAbnqxsCLZylgSq/QQNV
/pYW3DyIeh24fTD+prnvlx/r1obzJ76tsTe9p+kQuEOu9fVHA4dKoLM53qg4
bCjKmPj2jpEDvy5Qh7ocnF9gy3V9cQE/nA+x/4M9xBx9OP/mue/Bj5dqwPmg
4ODIUYTrt9pyomyfvDjcfBgfZj+MD3Mf2N2n5eDuRwnPlUYYfFj4w/go6SfD
GB5/6OkRABkoEAI=
                   "]}]}, 
                FaceForm[
                 RGBColor[
                 0.5689850000000001, 0.5689850000000001, 0.5689850000000001, 
                  1.]], StripOnInput -> False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{23.254, 15.48}, {
                   24.391000000000002`, 15.48}, {25.219, 
                   14.636999999999999`}, {25.219, 13.57}, {25.219, 12.504}, {
                   24.391000000000002`, 11.656}, {23.254, 11.656}, {
                   22.113000000000003`, 11.656}, {21.288999999999998`, 
                   12.504}, {21.288999999999998`, 13.57}, {
                   21.288999999999998`, 14.636999999999999`}, {
                   22.113000000000003`, 15.48}, {23.254, 
                   15.48}}, CompressedData["
1:eJxTTMoPSmViYGAQBWIQHbRDrvW1oYXDnpLJEizfTBxg/GcXlG7/nGfqcLJs
33yp9eYO0vp3VdgemjrwMGm3i0ki+OvcH1aJ5JnB+U9B+v6ZOkyRYAnj6zV1
mOrcnfO82tRhGoiWNnXIBlm0xNjh8dLZRxQ2mEHoCSYOny75JgnsMHe4vrjA
luu6qUPcLk8epmwLh0Wu2z7/DTGH88HmzLaE8yG0NcTeOnM4H+wuPVM4X92Q
Y43MLyOHypdqhhw9Fg4BvdPzhJKNIPr2WThsKMqY+DbGAOLus6ZwPp/uprnv
000h/jtoBA8fjZj+Q19PGDughx8AvLCKGg==
                   "]}]}, 
                FaceForm[
                 RGBColor[0.999985, 0.999985, 0.999985, 1.]], StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{23.203, 
                   15.156}, {24.086, 15.156}, {24.723, 14.457}, {24.723, 
                   13.574}, {24.723, 12.690999999999999`}, {24.086, 11.992}, {
                   23.203, 11.992}, {22.32, 11.992}, {21.68, 
                   12.690999999999999`}, {21.68, 13.574}, {21.68, 14.457}, {
                   22.32, 15.156}, {23.203, 15.156}}, CompressedData["
1:eJxTTMoPSmViYGAQBWIQfbJs33yp9+YOQTvkWl9vNHaA8U8tdN322dbEQTOm
/9DXDnOHRUDu3xITh3axm+e+CyP4j5fOPqIwwQzOVzfkWCNjZQYxR98EIn7F
1MGi0zHh6QVjB6Du4MepJg4MIKBg6nAGZI+sqUOVyDr3h79MHapBtBRUf7+Z
g3/v9DwhZ3M4/8vfKxUv2SzhfKDqKpE8K4fKl2qGHGdM4Xxp/bsqbA+N4fwp
EixhfLxGEPeYWEDdbegwzbk753m0hcPVCqABJ/Qdcp//XvlRyAzOb30duEPu
qKnDaZA77xrCw4eHSbtdbKeRA3r4AQB5MpoX
                   "]}]}, 
                FaceForm[
                 RGBColor[
                 0.125, 0.48599200000000004`, 0.7729950000000001, 1.]], 
                StripOnInput -> False]}, ImageSize -> {30., 30.}, 
              PlotRange -> {{0., 30.}, {0., 30.}}, AspectRatio -> Automatic], 
             
             GridBox[{{
                RowBox[{
                  TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"PythonApp\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Authenticated : \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["False", "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                Evaluator -> Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{
               Thickness[0.03333333333333333], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                   0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                   3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                   0}, {1, 3, 3}}}, {{{7.539000000000001, 9.105}, {5.762, 
                   9.105}, {4.319999999999999, 10.543}, {4.319999999999999, 
                   12.324}, {4.319999999999999, 14.102}, {5.762, 15.543}, {
                   7.539000000000001, 15.543}, {9.32, 15.543}, {10.758, 
                   14.102}, {10.758, 12.324}, {10.758, 10.543}, {9.32, 
                   9.105}, {7.539000000000001, 9.105}}, CompressedData["
1:eJxTTMoPSmViYGDQAmIQvch12+e/ISYORhxrZKKeSDucXggUiEXwnbtznv/2
NIXzNWP6D33lMHM47m3e6fhADs6/UvFSzdBDEc5/vHT2EYUNKg6fLvkmCUSY
Y/Bh6mF8mHlgvoQF3L7sPSWTJVgs4fwpEixhfLwIPg+TdrvYTwQfrH+HFap5
QD6KfUA+zD0uIP9xWsP5zy4o3f4pZwPnM4CBLYRfoAbnqxsCLZylgSq/QQNV
/pYW3DyIeh24fTD+prnvlx/r1obzJ76tsTe9p+kQuEOu9fVHA4dKoLM53qg4
bCjKmPj2jpEDvy5Qh7ocnF9gy3V9cQE/nA+x/4M9xBx9OP/mue/Bj5dqwPmg
4ODIUYTrt9pyomyfvDjcfBgfZj+MD3Mf2N2n5eDuRwnPlUYYfFj4w/go6SfD
GB5/6OkRABkoEAI=
                   "]}]}, 
                FaceForm[
                 RGBColor[
                 0.5689850000000001, 0.5689850000000001, 0.5689850000000001, 
                  1.]], StripOnInput -> False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{23.254, 15.48}, {
                   24.391000000000002`, 15.48}, {25.219, 
                   14.636999999999999`}, {25.219, 13.57}, {25.219, 12.504}, {
                   24.391000000000002`, 11.656}, {23.254, 11.656}, {
                   22.113000000000003`, 11.656}, {21.288999999999998`, 
                   12.504}, {21.288999999999998`, 13.57}, {
                   21.288999999999998`, 14.636999999999999`}, {
                   22.113000000000003`, 15.48}, {23.254, 
                   15.48}}, CompressedData["
1:eJxTTMoPSmViYGAQBWIQHbRDrvW1oYXDnpLJEizfTBxg/GcXlG7/nGfqcLJs
33yp9eYO0vp3VdgemjrwMGm3i0ki+OvcH1aJ5JnB+U9B+v6ZOkyRYAnj6zV1
mOrcnfO82tRhGoiWNnXIBlm0xNjh8dLZRxQ2mEHoCSYOny75JgnsMHe4vrjA
luu6qUPcLk8epmwLh0Wu2z7/DTGH88HmzLaE8yG0NcTeOnM4H+wuPVM4X92Q
Y43MLyOHypdqhhw9Fg4BvdPzhJKNIPr2WThsKMqY+DbGAOLus6ZwPp/uprnv
000h/jtoBA8fjZj+Q19PGDughx8AvLCKGg==
                   "]}]}, 
                FaceForm[
                 RGBColor[0.999985, 0.999985, 0.999985, 1.]], StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{23.203, 
                   15.156}, {24.086, 15.156}, {24.723, 14.457}, {24.723, 
                   13.574}, {24.723, 12.690999999999999`}, {24.086, 11.992}, {
                   23.203, 11.992}, {22.32, 11.992}, {21.68, 
                   12.690999999999999`}, {21.68, 13.574}, {21.68, 14.457}, {
                   22.32, 15.156}, {23.203, 15.156}}, CompressedData["
1:eJxTTMoPSmViYGAQBWIQfbJs33yp9+YOQTvkWl9vNHaA8U8tdN322dbEQTOm
/9DXDnOHRUDu3xITh3axm+e+CyP4j5fOPqIwwQzOVzfkWCNjZQYxR98EIn7F
1MGi0zHh6QVjB6Du4MepJg4MIKBg6nAGZI+sqUOVyDr3h79MHapBtBRUf7+Z
g3/v9DwhZ3M4/8vfKxUv2SzhfKDqKpE8K4fKl2qGHGdM4Xxp/bsqbA+N4fwp
EixhfLxGEPeYWEDdbegwzbk753m0hcPVCqABJ/Qdcp//XvlRyAzOb30duEPu
qKnDaZA77xrCw4eHSbtdbKeRA3r4AQB5MpoX
                   "]}]}, 
                FaceForm[
                 RGBColor[
                 0.125, 0.48599200000000004`, 0.7729950000000001, 1.]], 
                StripOnInput -> False]}, ImageSize -> {30., 30.}, 
              PlotRange -> {{0., 30.}, {0., 30.}}, AspectRatio -> Automatic], 
             
             GridBox[{{
                RowBox[{
                  TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"PythonApp\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Authenticated : \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["False", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Request URL: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                  "\"https://account.wolfram.com/auth/request-token\"", 
                   "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Access URL: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                  "\"https://account.wolfram.com/auth/access-token\"", 
                   "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"OAuth Version: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"1.0a\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"OAuth Type: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"TwoLegged\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Consumer Key: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                  "\"42FmMBhhGfxGo5SxU1Zm3mBqptOcBhJHtNto6cxqSJI=\"", 
                   "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Consumer Secret: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                  "\"8z9eI1PbkbBix2AQP/VjjHnk6p/BJ8iVRcxK1jmjGEs=\"", 
                   "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Signature Method: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"HMAC-SHA1\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox[
                  "\"Transmission Method: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Headers\"", "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   SecuredAuthenticationKey[
    Association[
    "Name" -> "PythonApp", "ApplicationID" -> 118, "ManagementFunctions" -> 
     True, "LocallyEnabled" -> True, "RequestTokenURL" -> 
     "https://account.wolfram.com/auth/request-token", "AccessTokenURL" -> 
     "https://account.wolfram.com/auth/access-token", "OAuthVersion" -> 
     "1.0a", "OAuthType" -> "TwoLegged", "ConsumerKey" -> 
     "42FmMBhhGfxGo5SxU1Zm3mBqptOcBhJHtNto6cxqSJI=", "ConsumerSecret" -> 
     "8z9eI1PbkbBix2AQP/VjjHnk6p/BJ8iVRcxK1jmjGEs=", 
     "SignatureMethod" -> {"HMAC", "SHA1"}, "TransmissionMethod" -> 
     "Headers"]],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{3.732270428057129*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"c2f07797-0607-4429-8da0-40fa11fa597e"]
}, Open  ]],

Cell["The API permissions:", "Item",
 CellChangeTimes->{{3.73227059090843*^9, 
  3.732270593595688*^9}},ExpressionUUID->"086bc695-1749-4c01-b2f9-\
ae6ff1b1a713"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", 
  RowBox[{
   RowBox[{"CloudObject", "[", "\"\<api/private/requesterid\>\"", "]"}], ",", 
   "Permissions"}], "]"}]], "Input",
 CellChangeTimes->{{3.732270293356976*^9, 3.7322703500668716`*^9}, {
  3.7322707893593903`*^9, 3.732270791068478*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"3ece9ddb-9e57-49ce-9709-9625cb905dc1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Permissions", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"Owner\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\<\"Read\"\>", ",", "\<\"Write\"\>", ",", "\<\"Execute\"\>"}],
        "}"}]}], ",", 
     RowBox[{
      RowBox[{"ApplicationIdentificationKey", "[", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{"\<\"ConsumerKey\"\>", 
         "\[Rule]", "\<\"42FmMBhhGfxGo5SxU1Zm3mBqptOcBhJHtNto6cxqSJI=\"\>"}], 
        "\[RightAssociation]"}], "]"}], "\[Rule]", 
      RowBox[{"{", "\<\"Execute\"\>", "}"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.732270351062914*^9, 3.732270804083778*^9, 
  3.737202351215344*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"7d3300e0-145a-4557-940f-d2b2dec2c6bf"]
}, Open  ]],

Cell["Start a new session which use SAK:", "Item",
 CellChangeTimes->{{3.732270600924863*^9, 
  3.732270613266388*^9}},ExpressionUUID->"23ca6398-7b17-4fd9-ba56-\
921822f74874"],

Cell["\<\
from wolframclient import SecuredAuthenticationKey, WolframCloudSession
import json

user_config_file = '/etc/testing-account-credentials.json'
with open(user_config_file, 'r') as fp:
\tjson_user_config = json.load(fp)

sak = SecuredAuthenticationKey(
\tjson_user_config['SAK']['consumer_key'],
\tjson_user_config['SAK']['consumer_secret']
)\
\>", "ExternalLanguage",
 CellChangeTimes->{{3.7322704565708857`*^9, 3.732270468156393*^9}, 
   3.737202003324279*^9, {3.7372020360077543`*^9, 3.737202060863834*^9}, {
   3.737202098907724*^9, 3.737202111493005*^9}, {3.737202211419505*^9, 
   3.737202211831107*^9}, {3.737202248335372*^9, 3.737202249359315*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"96883d7a-b358-45c1-a395-711f73bbd78e"],

Cell["\<\
session = WolframCloudSession(authentication=sak)

session.authorized\
\>", "ExternalLanguage",
 CellChangeTimes->{{3.732270440335202*^9, 3.7322705269339437`*^9}, 
   3.7322705676062193`*^9, {3.737202027915319*^9, 3.737202053656796*^9}, {
   3.7372021271023817`*^9, 3.737202129660481*^9}, {3.737202159910316*^9, 
   3.73720216503557*^9}, {3.7372021962210703`*^9, 3.7372022251520557`*^9}, {
   3.737202277021027*^9, 3.737202282840074*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"a58623d6-8a09-49f2-9cf4-8059e23c9158"],

Cell["Call the API:", "Item",
 CellChangeTimes->{{3.73227063077118*^9, 
  3.732270632314785*^9}},ExpressionUUID->"2e236ce0-e115-46ee-8ea8-\
2a2a3d6e2167"],

Cell["\<\
api = ('dorianb', 'api/private/requesterid')
api_call = session.call(api)

if api_call.success:
\tresult = api_call.output
else:
\tresult = api_call.failure

result\
\>", "ExternalLanguage",
 CellChangeTimes->{{3.732269754662766*^9, 3.7322697627719793`*^9}, {
  3.7322698262768717`*^9, 3.7322698660251207`*^9}, {3.732270820586297*^9, 
  3.732270837587079*^9}, {3.737202314334544*^9, 3.737202318655892*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"95cfaf64-9d6e-4bf3-bd58-e446d0c493a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Encode inputs", "Subsection",
 CellChangeTimes->{{3.732270897346924*^9, 
  3.7322709000507917`*^9}},ExpressionUUID->"876704d8-9ccd-4b94-b39e-\
1a19b286d022"],

Cell["Provide JSON encoded input:", "Item",
 CellChangeTimes->{{3.732271014889813*^9, 
  3.732271019816288*^9}},ExpressionUUID->"37677ffd-0ecd-44ef-a362-\
b29bf3d38164"],

Cell[CellGroupData[{

Cell["\<\
api = ('dorianb', 'api/private/barchart_wxf')
api_call = session.call(api,
\tinput_parameters={'input' : list(range(10)) },
\ttarget_format='json'
)

if api_call.success:
\tresult = api_call.output
else:
\tresult = api_call.failure
\tfor field, err in api_call.iter_error():
\t\tprint(field, err)

result\
\>", "ExternalLanguage",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQnWgaGr733GtHvi0RESBa6Y5HAog+ddYhFUR/OjTp
DoiOOrnpHog2CFv5HUTn8nPz7wPS29rb5oPoeMmVYNrOd9ZyEH2m5jCYPqfl
txFEv/J9AKY1tnzaBqI/sDNvB9Hai9TOguhZFQznQfQzO7lHIDrqeQmYLtWz
ZdwPpFMsvzOBaCufd2tBNNPJdetB9JyXFXdAdFaE2kMQnb9zk9EBIM22t8EF
RG/z/eQFolef8fAG0RtE7PxB9JFWDzC9KyPwHIjuMQgD03kvcwQPAun9mgJi
IJpFNkEHRKedywTTk6XEX6reeO1Y//PeaxANAAGku2w=
  "],
 CellLabel->
  "In[125]:=",ExpressionUUID->"96924237-c780-40a5-90f7-2abaa81a6f46"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ByteArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"6.8 kB\"", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"6.8 kB\"", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ByteArray[CompressedData["
1:eJztmFtvG0UUgH2NL3FKA6XQipY2LYI+ICTUBwQPG3dTW5HS2ngjHhBCTOxx
GLHesWZ2HVxeuJYiHkC0ipoUiRrapIAoRdyKFAlpzh9jdr0X27E3CQ/IErYl
z8yeM3Mu35lZeU6v0MpKNBKJfHY8Ennp5XqMp4sMNd8mVV5P8cQS4aZ81m2j
PFVqoiox22pEDpJlSoxA6rYMbouNsnggflmAdYVF3E8gXj8Bt8QOhntn5wNp
wl0kMmAyxjMLhOGqSVpYmkxfrK3iAmWNQUFmWXr8joE550mtgXS9x1l27g3x
BXwIvz8Hd5R6nKcrxQsq1SljcPXSzHnxDYefFSa2xd24+A6+hk9hWw53rjTh
KzmvAzeUenY83Yrx1DKlukmaspvVTGRaPM8wsl2qoLUL9F3MZT+70DZQg1Tl
2I8gwXOFi2VGWsjEby3WpVZOtRjDhvka0i2sZS5Ri+NSC7O++OJ+KWRkmbSX
cAvrLkW4rcjHs/kVTnXLxH7knvih0hv80+IT+PFV8fAk3FV86l4b57mKzCEy
VnXc4zQTN+cuvyjutKEzpLDEb3AfbsLW8yr82S+uWDrWDlWoZdSIsVpBNWJx
NaLasqRmtnUsu2NaeP83wkuzzx6T0e/ItXYTfn1Nh1/FuujEvZMDHighgKMB
4OgE8HgAFlvimrieI28m5kMAT/vC+RC+sYBvbMJ3zPjmhvAVP70i/mjD5/Dl
rCdNhwGOB4DjE8DjAViDjxfF1fMvPBrK93FPejiMbyLgm5jwHS++R0P5HvOk
R8L4JgO+yQnf8eJ7PJTvCU/6ZBjfqYDv1ITvePE9OYRv8N/7lCd9KoxvKuCb
mvAdD77n4Nuzqth84nQo3zlPeiqMbzrgm57wHS++Z0L5+ndnc2F8MwHfzC4H
9ttG/XroLuXnx7XLc3nDJEgniEvbPFlAOse9SRxRLIllYrT91Z3WwAe+Tby1
CB/BFnRKz/Tly3XVjUGb8e40l9AK1gN5UCkH8HaIlyMupqZK9TrHJnxwJhoT
12C7BX/BD7AJ18WO+3aF98PXGJmWobeoB7Q4fJHcv6yTg7Z7QAqGy5IB13Le
MG9v+JmBGnxkgfCmjtoFy5DwqMHTizW5z+Uu9FWm87wpyVaQlNvGy3QNMz5d
pLrUdJ6q8LevnXDMuJlyi1oWAbOwr5KxVbyC6uolLlNZLc6vr5a11UqMrBJj
H1XtTDmqUsrkTpbnFrcPv1LTiam3CpwdPxi1fYz5/eDWvi8XZcSc3abp1FSj
anQPecw39phKmwTXnKPzvzDIswWGGrgvwaMSPTr5zhpOBe1aI5O3TNqQ4Ks9
3b2lXfZFRmr2zuSh5g/5at1S7ztfYkPfL0xsig3vCxtKYLIsE1SR74tdpwGP
53Xd+Rn+xJl+2J9eRjX7LTG4inRuSqsiHdfYe0fE/SJ0rogbyoin+53TG4z4
Pggm2YfEzV2Q538A7EVx4A==
   "]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.732277578175733*^9, 3.732277604718833*^9}, {
   3.73227766826431*^9, 3.732277698178899*^9}, {3.732277732593553*^9, 
   3.732277771837142*^9}, 3.737202533473481*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"a6807252-bf06-41fb-984d-dbc3d8356233"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"BinaryDeserialize", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.7322725157466908`*^9, 3.7322725626392*^9}, {
  3.732272597261565*^9, 3.732272598909971*^9}, {3.732272680915655*^9, 
  3.7322726822596483`*^9}, {3.732272768989675*^9, 3.732272776892335*^9}, {
  3.732272819474946*^9, 3.732272820248684*^9}, {3.732272919432352*^9, 
  3.732272922724724*^9}, {3.732273088516712*^9, 3.7322730935293093`*^9}, {
  3.732277382213909*^9, 3.732277383873768*^9}, {3.7322775791166573`*^9, 
  3.732277593162077*^9}, {3.73227774287294*^9, 3.732277745680786*^9}, {
  3.7372025421466312`*^9, 3.737202583120792*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"edd907a3-9714-4d10-be94-dbca47aef8d4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calling a Kernel:", "Chapter",
 CellChangeTimes->{{3.736766389351145*^9, 
  3.7367663951404047`*^9}},ExpressionUUID->"7221e8c2-c383-46ee-836f-\
f97fb19b32b7"],

Cell[CellGroupData[{

Cell["\<\
from wolframclient import WolframKernel, WolframLanguageSession
from wolframclient.utils.encoding import force_text

wk = WolframKernel('/Applications/Mathematica.app/Contents/MacOS/\
WolframKernel')

with WolframLanguageSession(wk, log_kernel=True) as session:
\tresult = session.evaluate('x=RandomInteger[10,5]')
\ttotal = session.evaluate('MinMax[x]')


(force_text(result), force_text(total))\
\>", "ExternalLanguage",
 CellChangeTimes->{
  3.736766400290382*^9, {3.736766466321251*^9, 3.736766657951757*^9}, {
   3.736766705021565*^9, 3.736766716307968*^9}, {3.7367670566001663`*^9, 
   3.7367670577481413`*^9}, {3.736769070356245*^9, 3.736769084489802*^9}, {
   3.736769131824814*^9, 3.736769162607065*^9}, {3.736769226684309*^9, 
   3.736769291809227*^9}, {3.736769411329831*^9, 3.736769415502101*^9}, 
   3.7367694473370113`*^9, {3.737202631352236*^9, 3.73720269501803*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"891fbddd-5413-4c83-973d-d562c9bde03f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"{7, 8, 4, 3, 0}\"\>", ",", "\<\"{0, 8}\"\>"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.736769183397273*^9, {3.737202656384837*^9, 3.73720269819636*^9}},
 CellLabel->
  "Out[134]=",ExpressionUUID->"8f0356b2-dc9a-4ad8-8a69-5b7c20c96d86"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
from wolframclient import WolframKernel, WolframLanguageSession
from wolframclient.utils.encoding import force_text

wk = WolframKernel('/Applications/Mathematica.app/Contents/MacOS/\
WolframKernel');

with WolframLanguageSession(wk, log_kernel=True) as session:
    result1 = session.evaluate('Solve[x^2==-1,x]')
    
force_text(result1)\
\>", "ExternalLanguage",
 CellChangeTimes->{{3.736770140430735*^9, 3.736770476439006*^9}, {
  3.736770512732896*^9, 3.7367705237802887`*^9}, {3.736770582429336*^9, 
  3.736770655430139*^9}, {3.736770743573947*^9, 3.736770782476235*^9}, {
  3.737202702075419*^9, 3.737202723009412*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"0b78abf4-d97e-4433-9c87-8976cee7f70b"],

Cell[BoxData["\<\"{{x -> -I}, {x -> I}}\"\>"], "Output",
 CellChangeTimes->{
  3.736770370998823*^9, 3.736770422858431*^9, {3.7367704583298264`*^9, 
   3.736770482137477*^9}, 3.736770530582879*^9, {3.73677060534405*^9, 
   3.73677062631909*^9}, {3.736770658652349*^9, 3.736770698029052*^9}, {
   3.736770763255394*^9, 3.73677078454381*^9}, {3.737202719623098*^9, 
   3.737202724785746*^9}},
 CellLabel->
  "Out[136]=",ExpressionUUID->"8a88d4ff-016d-4df5-967c-f8d3df601d0d"]
}, Open  ]],

Cell["Configure a logger:", "Item",
 CellChangeTimes->{{3.7367669321229353`*^9, 
  3.736766935770501*^9}},ExpressionUUID->"41a25776-b75b-496d-a456-\
029605003495"],

Cell["\<\
import logging

logger = logging.getLogger(__name__)

logging.basicConfig(
    filename='/tmp/python.log',
    filemode='a',
    format='%(asctime)s %(name)s %(levelname)s %(message)s',
    level=logging.DEBUG)\
\>", "ExternalLanguage",
 CellChangeTimes->{{3.736766927482994*^9, 3.736766955642334*^9}, {
  3.7367677553044863`*^9, 3.7367677558623123`*^9}, {3.736769509693782*^9, 
  3.736769517917664*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"81eb6bdd-d51a-454d-b6b7-645555ac3d9f"],

Cell[CellGroupData[{

Cell["\<\
from wolframclient.evaluation.kernel.kernelsession import evaluate

force_text(evaluate(wk, b'Now'))\
\>", "ExternalLanguage",
 CellChangeTimes->{{3.736767033987171*^9, 3.736767128001906*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"f6df8c61-a8f6-4c53-a434-9dae7d0711f9"],

Cell[BoxData["\<\"DateObject[{2018, 6, 5, 17, 52, \
27.590116`8.193328508228198}, \\\"Instant\\\", \\\"Gregorian\\\", 2.]\"\>"], \
"Output",
 CellChangeTimes->{{3.736767095982285*^9, 3.736767129507134*^9}, 
   3.7372027476028557`*^9},
 CellLabel->
  "Out[138]=",ExpressionUUID->"59041e6d-4beb-4633-9034-f2cc289b6db4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToExpression", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.7372027622217407`*^9, 3.73720276514364*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"5527ea0e-754c-4622-b265-459fbea56813"],

Cell[BoxData[
 TemplateBox[{RowBox[{"\"Tue 5 Jun 2018 17:52:27\"", 
     StyleBox[
      RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
        StyleBox["2.`", NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}],RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2018", ",", "6", ",", "5", ",", "17", ",", "52", ",", 
           "27.590116`8.193328508228198"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", "2.`"}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.7372027653954163`*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"f0e062d7-1e17-43bd-b02b-7bbb8b65e191"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Serialization", "Chapter",
 CellChangeTimes->{{3.732276882384182*^9, 
  3.732276888694841*^9}},ExpressionUUID->"e75496d4-c4b6-487b-859c-\
1fe7dab43b71"],

Cell[CellGroupData[{

Cell["Built-in serializer:", "Subsection",
 CellChangeTimes->{{3.732276958244134*^9, 
  3.732276970939557*^9}},ExpressionUUID->"c11ddc6a-a9b7-4de9-9a01-\
c78406e44bac"],

Cell["Either load the library from a local path", "Item",
 CellChangeTimes->{{3.7372027859833317`*^9, 
  3.737202792822027*^9}},ExpressionUUID->"6b42cba5-4b77-4c3b-a6c7-\
fbe96017aede"],

Cell["\<\
import sys
sys.path.insert(0, \
'/Users/dorianb/Work/Mathematica/Workspaces/WolframClientForPython')\
\>", "ExternalLanguage",
 CellChangeTimes->{{3.7322656359406548`*^9, 3.732265648251791*^9}, 
   3.737202794766631*^9},
 CellLabel->
  "In[140]:=",ExpressionUUID->"e80077ce-f7c6-4404-ac1b-0a67881d9d53"],

Cell["\<\
Or install the Wolfram Client Library for Python (wolframclient) from a \
shell, in the library directory:\
\>", "Item",
 CellChangeTimes->{{3.732366112328683*^9, 3.732366119407084*^9}, {
  3.732366178492947*^9, 3.732366182292548*^9}, {3.737202799182868*^9, 
  3.737202845315723*^9}},ExpressionUUID->"980127cd-6c76-46a3-b12a-\
07b1ff0ffb4b"],

Cell["python setup.py install", "Program",
 CellChangeTimes->{{3.732365829852388*^9, 3.73236583503652*^9}, 
   3.737202822776641*^9},ExpressionUUID->"6beada1e-e412-422f-bfe9-\
126c966c0b89"],

Cell["Serialize to input form:", "Item",
 CellChangeTimes->{{3.73227780662899*^9, 
  3.732277813883946*^9}},ExpressionUUID->"0fd29a7b-4a01-480a-8cf8-\
fa3ae814d605"],

Cell[CellGroupData[{

Cell["\<\
from wolframclient import export

export({ 'foo' : range(3) })\
\>", "ExternalLanguage",
 CellChangeTimes->{
  3.7322769728272333`*^9, 3.732277034098939*^9, {3.7323662304277*^9, 
   3.732366293728818*^9}, {3.732367086722414*^9, 3.732367087322689*^9}, {
   3.7372028703219833`*^9, 3.737202870528616*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"1e22c7d1-f1be-4b5f-99d6-3acee22ac7ef"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ByteArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"22 bytes\"", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"22 bytes\"", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ByteArray[{60, 124, 34, 102, 111, 111, 34, 32, 58, 62, 32, 123, 48, 44, 32, 
   49, 44, 32, 50, 125, 124, 62}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.732277081275334*^9, 3.732365352722917*^9, 3.7323662049505177`*^9, 
   3.7323662827748137`*^9, 3.7323670880502653`*^9, {3.73720286400263*^9, 
   3.737202871939406*^9}},
 CellLabel->
  "Out[143]=",ExpressionUUID->"82ccd171-f8bc-4b23-bbeb-403c913148d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ByteArrayToString", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.732277083393114*^9, 3.7322770907201433`*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"ffdf2f04-edac-4097-91d0-d0fd3cfcee2a"],

Cell[BoxData["\<\"<|\\\"foo\\\" :> {0, 1, 2}|>\"\>"], "Output",
 CellChangeTimes->{
  3.732277091019856*^9, 3.732366206129264*^9, {3.737202864843663*^9, 
   3.7372028731502447`*^9}},
 CellLabel->
  "Out[144]=",ExpressionUUID->"81656d8e-35ce-4f58-bb62-70d0435043e7"]
}, Open  ]],

Cell["Serialize to WXF", "Item",
 CellChangeTimes->{{3.732277817537569*^9, 
  3.732277820083124*^9}},ExpressionUUID->"8afb3660-50c1-45e7-a99e-\
1b1c0abc7b30"],

Cell[CellGroupData[{

Cell["\<\
from wolframclient import export

export({ 'foo' : range(3) }, target_format='wxf')\
\>", "ExternalLanguage",
 CellChangeTimes->{
  3.7322769728272333`*^9, 3.732277034098939*^9, {3.732277107871779*^9, 
   3.732277111269616*^9}, {3.737202875265192*^9, 3.737202887168256*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"992e6bb9-fd7f-4cdf-959b-61c8624bbd97"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ByteArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"24 bytes\"", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"24 bytes\"", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ByteArray[{56, 58, 65, 1, 58, 83, 3, 102, 111, 111, 102, 3, 115, 4, 76, 105,
    115, 116, 67, 0, 67, 1, 67, 2}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.732277112072117*^9, {3.737202876253223*^9, 3.7372028875328903`*^9}},
 CellLabel->
  "Out[146]=",ExpressionUUID->"00c2de5c-db67-482d-83d9-63de7dd42fd7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinaryDeserialize", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.732277113859356*^9, 3.732277118575184*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"31e35c0b-065e-4520-bd92-c9e36aeee7bb"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"foo\"\>", "\[RuleDelayed]", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "2"}], "}"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.7322771189500313`*^9, 3.737202888912318*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"5ea65291-069f-4df9-a454-c4615e3e5b5f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Normalizer:", "Subsection",
 CellChangeTimes->{{3.732277840699501*^9, 
  3.732277842226454*^9}},ExpressionUUID->"5ec3e488-cf57-475a-9a8d-\
c291fe74a23b"],

Cell["\<\
Normalizer function is applied when no valid serialization was found.\
\>", "Item",
 CellChangeTimes->{{3.73227784679*^9, 
  3.732277871290369*^9}},ExpressionUUID->"ffc84861-f136-45f1-aa40-\
75a24313d54d"],

Cell[CellGroupData[{

Cell["\<\
class MyPoint2D(object):
\tdef __init__(self, x,y):
\t\tself.x = x
\t\tself.y = y

ptA = MyPoint2D(0,0)
ptB = MyPoint2D(1,1)
export([ptA, ptB])\
\>", "ExternalLanguage",
 CellChangeTimes->{{3.732277874709285*^9, 3.7322779622534103`*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"95958729-7569-499a-8fd7-75cfb53fc57c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Exception Thrown : NotImplementedError.\"", 
                    "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"EvaluationFailure\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Exception Thrown : NotImplementedError.\"", 
                    "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"EvaluationFailure\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"ExceptionType\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"NotImplementedError\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"StackTrace\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  FrameBox[
                   PaneBox[
                    StyleBox[
                    "\"Traceback (most recent call last):\\n  File \
\\\"/Applications/Mathematica.app/Contents/SystemFiles/Components/\
ExternalEvaluate_Python/Resources/wolframevaluate/evaluate.py\\\", line 118, \
in runEvalLoop\\n    returnJSON['output'] = \
eval(compile(ast.Expression(astToken.value), 'file', 'eval'),globals())\\n  \
File \\\"file\\\", line 8, in <module>\\n    import code\\n  File \
\\\"/Users/dorianb/Work/Mathematica/Workspaces/WolframClientForPython/\
wolframclient/serializers/export.py\\\", line 22, in export\\n    return \
available_formats[target_format](**options).export(data, stream=stream)\\n  \
File \\\"/Users/dorianb/Work/Mathematica/Workspaces/WolframClientForPython/\
wolframclient/serializers/base.py\\\", line 29, in export\\n    stream = \
self.dump(data, stream)\\n  File \
\\\"/Users/dorianb/Work/Mathematica/Workspaces/WolframClientForPython/\
wolframclient/serializers/wl.py\\\", line 31, in dump\\n    for payload in \
self.normalize(data):\\n  File \
\\\"/Users/dorianb/Work/Mathematica/Workspaces/WolframClientForPython/\
wolframclient/serializers/wl.py\\\", line 16, in yield_with_separators\\n    \
for i, arg in enumerate(iterable):\\n  File \
\\\"/Users/dorianb/Work/Mathematica/Workspaces/WolframClientForPython/\
wolframclient/serializers/normalizer/builtin.py\\\", line 70, in <genexpr>\\n \
   for value in o\\n  File \
\\\"/Users/dorianb/Work/Mathematica/Workspaces/WolframClientForPython/\
wolframclient/utils/dispatch.py\\\", line 97, in inner\\n    return \
self.resolve(function, *args)(obj, *args, **opts)\\n  File \
\\\"/Users/dorianb/Work/Mathematica/Workspaces/WolframClientForPython/\
wolframclient/serializers/normalizer/__init__.py\\\", line 26, in \
normalizer\\n    raise NotImplementedError('Cannot serialize object of class \
%s' % o.__class__)\\nNotImplementedError: Cannot serialize object of class \
<class 'wolframevaluate.evaluate.MyPoint2D'>\\n\"", "Program", 
                    LineBreakWithin -> False], ImageSize -> {{1, 500}, Tiny}, 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline], Background -> 
                   RGBColor[
                    0.9012345679012346, 0.9012345679012346, 
                    0.9012345679012346], RoundingRadius -> 5, FrameStyle -> 
                   None, BaselinePosition -> Baseline], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Input\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"class MyPoint2D(object):\\n\\tdef __init__(self, x,y):\\n\
\\t\\tself.x = x\\n\\t\\tself.y = y\\n\\nptA = MyPoint2D(0,0)\\nptB = \
MyPoint2D(1,1)\\nexport([ptA, ptB])\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Output\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"Missing", "[", 
                    RowBox[{"\"KeyAbsent\"", ",", "\"output\""}], "]"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure["EvaluationFailure", 
   Association[
   "MessageTemplate" :> MessageName[ExternalEvaluate, "error"], 
    "MessageParameters" -> Association["Type" -> "NotImplementedError"], 
    "ExceptionType" -> "NotImplementedError", "StackTrace" -> Framed[
      Pane[
       Style[
       "Traceback (most recent call last):\n  File \
\"/Applications/Mathematica.app/Contents/SystemFiles/Components/\
ExternalEvaluate_Python/Resources/wolframevaluate/evaluate.py\", line 118, in \
runEvalLoop\n    returnJSON['output'] = \
eval(compile(ast.Expression(astToken.value), 'file', 'eval'),globals())\n  \
File \"file\", line 8, in <module>\n    import code\n  File \
\"/Users/dorianb/Work/Mathematica/Workspaces/WolframClientForPython/\
wolframclient/serializers/export.py\", line 22, in export\n    return \
available_formats[target_format](**options).export(data, stream=stream)\n  \
File \"/Users/dorianb/Work/Mathematica/Workspaces/WolframClientForPython/\
wolframclient/serializers/base.py\", line 29, in export\n    stream = \
self.dump(data, stream)\n  File \
\"/Users/dorianb/Work/Mathematica/Workspaces/WolframClientForPython/\
wolframclient/serializers/wl.py\", line 31, in dump\n    for payload in \
self.normalize(data):\n  File \
\"/Users/dorianb/Work/Mathematica/Workspaces/WolframClientForPython/\
wolframclient/serializers/wl.py\", line 16, in yield_with_separators\n    for \
i, arg in enumerate(iterable):\n  File \
\"/Users/dorianb/Work/Mathematica/Workspaces/WolframClientForPython/\
wolframclient/serializers/normalizer/builtin.py\", line 70, in <genexpr>\n    \
for value in o\n  File \
\"/Users/dorianb/Work/Mathematica/Workspaces/WolframClientForPython/\
wolframclient/utils/dispatch.py\", line 97, in inner\n    return \
self.resolve(function, *args)(obj, *args, **opts)\n  File \
\"/Users/dorianb/Work/Mathematica/Workspaces/WolframClientForPython/\
wolframclient/serializers/normalizer/__init__.py\", line 26, in normalizer\n  \
  raise NotImplementedError('Cannot serialize object of class %s' % \
o.__class__)\nNotImplementedError: Cannot serialize object of class <class \
'wolframevaluate.evaluate.MyPoint2D'>\n", "Program", LineBreakWithin -> False,
         StripOnInput -> True], ImageSize -> {{1, 500}, Tiny}, ContentPadding -> 
       False, FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
       Baseline], StripOnInput -> True, Background -> 
      RGBColor[0.9012345679012346, 0.9012345679012346, 0.9012345679012346], 
      RoundingRadius -> 5, FrameStyle -> None, BaselinePosition -> Baseline], 
    "Input" -> 
    "class MyPoint2D(object):\n\tdef __init__(self, x,y):\n\t\tself.x = x\n\t\
\tself.y = y\n\nptA = MyPoint2D(0,0)\nptB = MyPoint2D(1,1)\nexport([ptA, \
ptB])", "Output" -> Missing["KeyAbsent", "output"]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.732366878491172*^9, 3.7372028947422667`*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"368510cb-99b9-42e6-b0e7-cae47c96e25e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
from wolframclient import wl

def normalize(python_object):
\tif isinstance(python_object, MyPoint2D):
\t\treturn wl.Point( [python_object.x, python_object.y] )
\treturn python_object
\t
export([ptA, ptB], normalizer=normalize)\
\>", "ExternalLanguage",
 CellChangeTimes->{{3.732277992784129*^9, 3.732278014586635*^9}, {
   3.7322780892035522`*^9, 3.732278133681456*^9}, {3.732278184758559*^9, 
   3.732278186190852*^9}, {3.732278233168304*^9, 3.7322782485082083`*^9}, {
   3.732278319368072*^9, 3.7322783233108263`*^9}, {3.73227913373833*^9, 
   3.732279134505077*^9}, {3.732366984656612*^9, 3.73236700894256*^9}, 
   3.737202906160606*^9},
 CellLabel->
  "In[149]:=",ExpressionUUID->"e93d9350-d40b-404d-8c11-f0223257b4a9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ByteArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"30 bytes\"", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"30 bytes\"", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ByteArray[{123, 80, 111, 105, 110, 116, 91, 123, 48, 44, 32, 48, 125, 93, 
   44, 32, 80, 111, 105, 110, 116, 91, 123, 49, 44, 32, 49, 125, 93, 125}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.732278257448962*^9, 3.73227828941194*^9, {3.732278323718437*^9, 
   3.732278345086957*^9}, 3.7322791349640923`*^9, 3.732367042370769*^9, 
   3.737202906821262*^9},
 CellLabel->
  "Out[149]=",ExpressionUUID->"470e16df-f6b2-48cc-acfe-7dcb7fcd68e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ByteArrayToString", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.732278279407868*^9, 3.732278282312483*^9}, {
  3.732278332276225*^9, 3.732278342299189*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"3de380e2-1366-4c07-a138-f8c3fcd033d7"],

Cell[BoxData["\<\"{Point[{0, 0}], Point[{1, 1}]}\"\>"], "Output",
 CellChangeTimes->{
  3.7322782922329407`*^9, {3.732278324841516*^9, 3.732278345694449*^9}, 
   3.732279135844133*^9, 3.732367043888578*^9, 3.737202907911922*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"05c8e603-5da6-4c93-9909-17736ac211cc"]
}, Open  ]],

Cell[TextData[{
 "We can also subclass or define a new class that extends WLSerializable and \
implement ",
 StyleBox["to_wl",
  FontSlant->"Italic"],
 ":"
}], "Item",
 CellChangeTimes->{{3.73227784679*^9, 3.732277871290369*^9}, {
  3.732278509394487*^9, 
  3.732278559783614*^9}},ExpressionUUID->"47590c16-057e-4bf8-a014-\
d800f582bbd7"],

Cell[CellGroupData[{

Cell["\<\
from wolframclient import WLSerializable

class MyPoint2DSerializable(MyPoint2D, WLSerializable):
\tdef to_wl(self):
\t\treturn wl.Point([self.x, self.y])
\t\t

ptA = MyPoint2DSerializable(0,0)
ptB = MyPoint2DSerializable(1,1)
export([ptA, ptB])\
\>", "ExternalLanguage",
 CellChangeTimes->{{3.732278353105513*^9, 3.732278527346393*^9}, {
   3.7322791196198997`*^9, 3.732279127449429*^9}, 3.7372029140813723`*^9},
 CellLabel->
  "In[151]:=",ExpressionUUID->"07b71d31-205a-4ca9-a8c6-05ffccd166c9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ByteArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"30 bytes\"", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"30 bytes\"", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ByteArray[{123, 80, 111, 105, 110, 116, 91, 123, 48, 44, 32, 48, 125, 93, 
   44, 32, 80, 111, 105, 110, 116, 91, 123, 49, 44, 32, 49, 125, 93, 125}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.732278426831369*^9, {3.732278459679237*^9, 3.732278491554007*^9}, 
   3.732278524718294*^9, 3.732278566390513*^9, {3.7322791222724743`*^9, 
   3.732279127915164*^9}, 3.73720291458928*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"14aa880a-597e-465a-b759-c18ab4599551"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ByteArrayToString", "[", "%", "]"}]], "Input",
 CellLabel->
  "In[152]:=",ExpressionUUID->"b2a15dfe-c812-4e84-a1bd-ededcdcc71f2"],

Cell[BoxData["\<\"{Point[{0, 0}], Point[{1, 1}]}\"\>"], "Output",
 CellChangeTimes->{
  3.732278497154951*^9, 3.732278567680367*^9, {3.732279123132826*^9, 
   3.732279128774734*^9}, 3.737202916194038*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"1b6e6dce-cb34-4eba-8091-6cb487434a6f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Modular control: chaining encoders", "Subsection",
 CellChangeTimes->{{3.732278582485714*^9, 
  3.732278609338593*^9}},ExpressionUUID->"d4117eda-f08f-4430-8a97-\
5e2cbca616f2"],

Cell["\<\
from wolframclient.serializers.wxfencoder.serializer import WXFExprSerializer
from wolframclient.serializers.wxfencoder.wxfexprprovider import \
WXFExprProvider
from wolframclient.utils import six\
\>", "ExternalLanguage",
 CellChangeTimes->{{3.732278717113112*^9, 
  3.732278763022729*^9}},ExpressionUUID->"77c76f40-d3c8-487e-a435-\
d317a60e98c1"],

Cell[CellGroupData[{

Cell["\<\
expr_provider = WXFExprProvider()
stream = six.BytesIO()
serializer = WXFExprSerializer(stream, expr_provider=expr_provider)

serializer.serialize([1,2,3])
stream.getvalue()\
\>", "ExternalLanguage",
 CellChangeTimes->{
  3.732278764026249*^9, {3.732278827975889*^9, 3.7322788348739223`*^9}, {
   3.732278876051415*^9, 3.732278902450927*^9}},
 CellLabel->
  "In[230]:=",ExpressionUUID->"6c265493-7963-4e56-881c-83ccfb623717"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ByteArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"16 bytes\"", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"16 bytes\"", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ByteArray[{56, 58, 102, 3, 115, 4, 76, 105, 115, 116, 67, 1, 67, 2, 67, 3}],
  
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.732278902858077*^9},
 CellLabel->
  "Out[230]=",ExpressionUUID->"bcf68323-e82a-471d-aefa-9d36f72783ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinaryDeserialize", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.7322789043812723`*^9, 3.732278907372404*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"dbae75c7-b73c-48c4-bc83-633859371583"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.7322789078314047`*^9},
 CellLabel->
  "Out[231]=",ExpressionUUID->"278acc7f-fd9e-436e-8691-d9f263bc0d0d"]
}, Open  ]],

Cell["Define an encoder for my new class MyPoint2D:", "Item",
 CellChangeTimes->{{3.7322789831821632`*^9, 
  3.73227900625159*^9}},ExpressionUUID->"81a864cb-ed9c-474e-a309-\
a7e7771b7ac5"],

Cell["\<\
from wolframclient.serializers.wxfencoder.wxfencoder import WXFEncoder
from wolframclient.serializers.wxfencoder.wxfexpr import WXFExprFunction, \
WXFExprSymbol

class PointEncoder(WXFEncoder):
\tdef encode(self, o):
\t\tif isinstance(o, MyPoint2D):
\t\t\tyield WXFExprFunction(1)
\t\t\tyield WXFExprSymbol('Point')
\t\t\tyield from self.serialize([o.x,o.y])\
\>", "ExternalLanguage",
 CellChangeTimes->{
  3.732278764026249*^9, {3.732278827975889*^9, 3.7322788348739223`*^9}, {
   3.732278876051415*^9, 3.732278902450927*^9}, {3.732278965854081*^9, 
   3.732278971572542*^9}, {3.732279008266206*^9, 3.73227910803041*^9}, {
   3.7322791629608192`*^9, 3.732279186117745*^9}, {3.732279280481003*^9, 
   3.732279293849415*^9}, {3.732279352643654*^9, 3.732279385691906*^9}, {
   3.7322794231004667`*^9, 3.732279472893949*^9}},
 CellLabel->
  "In[252]:=",ExpressionUUID->"315a1c46-8b29-4047-a09f-d284a0715894"],

Cell["Let\[CloseCurlyQuote]s chain it and test it:", "Item",
 CellChangeTimes->{{3.732279194590374*^9, 
  3.7322792012458076`*^9}},ExpressionUUID->"5e564319-aaa9-4fa3-99e1-\
19459cb22040"],

Cell[CellGroupData[{

Cell["\<\
expr_provider = WXFExprProvider()
expr_provider.add_encoder(PointEncoder())
stream = six.BytesIO()
serializer = WXFExprSerializer(stream, expr_provider=expr_provider)


ptA = MyPoint2D(0,0)
ptB = MyPoint2D(1,1)

serializer.serialize([ptA, ptB])

stream.getvalue()\
\>", "ExternalLanguage",
 CellChangeTimes->{{3.732279189177693*^9, 3.732279261291423*^9}, {
  3.732279330182582*^9, 3.732279338196495*^9}},
 CellLabel->
  "In[253]:=",ExpressionUUID->"75044bb4-0dc5-4093-ab4b-00478d628a78"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ByteArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"52 bytes\"", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"52 bytes\"", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ByteArray[{56, 58, 102, 2, 115, 4, 76, 105, 115, 116, 102, 1, 115, 5, 80, 
   111, 105, 110, 116, 102, 2, 115, 4, 76, 105, 115, 116, 67, 0, 67, 0, 102, 
   1, 115, 5, 80, 111, 105, 110, 116, 102, 2, 115, 4, 76, 105, 115, 116, 67, 
   1, 67, 1}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.732279262236718*^9, 3.7322792960285997`*^9, 3.732279339100669*^9, {
   3.73227943043423*^9, 3.732279474814644*^9}},
 CellLabel->
  "Out[253]=",ExpressionUUID->"1a26473a-2531-45f0-a80f-05e104bec651"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinaryDeserialize", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.7322794770879507`*^9, 3.732279479911406*^9}},
 CellLabel->
  "In[254]:=",ExpressionUUID->"6e9b5f05-342d-4a2a-ba9a-bf350baec93f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Point", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
   RowBox[{"Point", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.73227948022234*^9},
 CellLabel->
  "Out[254]=",ExpressionUUID->"7f13383b-bf2e-4a7d-bdd9-c49ddb486807"]
}, Open  ]],

Cell["\<\
Get a modular and extensible way to specify how to serialize custom class.\
\>", "Item",
 CellChangeTimes->{{3.732279601007525*^9, 
  3.732279631102895*^9}},ExpressionUUID->"a22b7c77-17fd-43cf-8924-\
6fd8a72b2b88"],

Cell["\<\
from wolframclient.serializers.wxfencoder.wxfnumpyencoder import \
NumPyWXFEncoder

expr_provider = WXFExprProvider()
expr_provider.add_encoder(PointEncoder())
expr_provider.add_encoder(NumPyWXFEncoder())
...\
\>", "ExternalLanguage",
 CellChangeTimes->{{3.732279543954665*^9, 
  3.732279593311008*^9}},ExpressionUUID->"2d4d27b8-4112-4001-9b61-\
f2b826f5df09"],

Cell["We have to load only the package the use will use.", "Item",
 CellChangeTimes->{{3.732279656599036*^9, 
  3.7322796758016872`*^9}},ExpressionUUID->"666c6c77-e86d-4f1a-9b33-\
01ebd02680dc"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1105},
WindowMargins->{{0, Automatic}, {Automatic, -1}},
Magnification:>1.5 Inherited,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 257, 4, 46, "Input",ExpressionUUID->"da8c97eb-8d4c-4992-89db-e1c3a930946e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[CellGroupData[{
Cell[840, 28, 1089, 28, 171, "Input",ExpressionUUID->"5ff3b530-b676-4fd5-a6c4-1b54da4f6705"],
Cell[1932, 58, 718, 14, 34, "Message",ExpressionUUID->"ab9b6386-95bd-426d-88e8-7998e5bb627f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2687, 77, 165, 3, 146, "Title",ExpressionUUID->"63a46957-ee56-4d9b-9324-10fb441ac525"],
Cell[CellGroupData[{
Cell[2877, 84, 159, 3, 103, "Chapter",ExpressionUUID->"0f2b1007-a999-4854-8987-0db77cdc77ef"],
Cell[CellGroupData[{
Cell[3061, 91, 163, 3, 81, "Subsection",ExpressionUUID->"b2bb1867-ef09-470d-a56f-67a717f418fb"],
Cell[CellGroupData[{
Cell[3249, 98, 301, 6, 49, "Item",ExpressionUUID->"9bd95203-f718-4dd0-b6ae-54608c23e2ee",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[3553, 106, 336, 8, 100, "ExternalLanguage",ExpressionUUID->"cc5c30cc-aa4f-49ba-96b2-2a8a48e08e75",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Closed]],
Cell[3904, 117, 433, 7, 80, "Output",ExpressionUUID->"65ec09db-013a-4cf2-8cd0-1df8ebfc2c19"],
Cell[4340, 126, 169, 3, 53, "Text",ExpressionUUID->"795279a2-2d9a-401f-b6ca-2dc67f4405df"],
Cell[CellGroupData[{
Cell[4534, 133, 306, 5, 49, "Item",ExpressionUUID->"55c29c2e-dda8-42a2-944f-eea8d8225c65",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4843, 140, 390, 9, 100, "ExternalLanguage",ExpressionUUID->"1c5ec67d-246b-452f-85b3-f50a8ee4985b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[5248, 152, 394, 12, 49, "Item",ExpressionUUID->"36e2771f-3270-487c-b1c8-f99c801da319"],
Cell[5645, 166, 867, 19, 296, "ExternalLanguage",ExpressionUUID->"230b09a3-c187-4eb2-96e3-94e158a71552"],
Cell[6515, 187, 156, 3, 49, "Item",ExpressionUUID->"9c44f482-6db3-4520-9628-a865af7c6768"],
Cell[CellGroupData[{
Cell[6696, 194, 475, 17, 345, "ExternalLanguage",ExpressionUUID->"4557edd1-412c-4a44-9017-8052249fd894"],
Cell[7174, 213, 185, 3, 52, "Output",ExpressionUUID->"64af8960-d5eb-4764-b990-02f4379b7fff"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7408, 222, 192, 3, 81, "Subsection",ExpressionUUID->"e1aa650d-3346-4c0a-9832-e3d94aca883a"],
Cell[7603, 227, 268, 4, 49, "Item",ExpressionUUID->"4ccc8b5a-509c-4a34-a4ef-7e322926be03"],
Cell[7874, 233, 264, 6, 73, "Program",ExpressionUUID->"611f0a66-4316-41ba-921d-ce53440d7eda"],
Cell[8141, 241, 264, 4, 49, "Item",ExpressionUUID->"98d716de-40f2-46ab-a4c0-b462701d9b4c"],
Cell[8408, 247, 218, 6, 98, "Program",ExpressionUUID->"c5f653e1-6c95-48e4-ac04-8b1a4df6904b"],
Cell[8629, 255, 319, 6, 49, "Item",ExpressionUUID->"d3d425da-2269-46cb-82c3-507545a48650"],
Cell[8951, 263, 335, 8, 122, "Program",ExpressionUUID->"c80ea0ce-80e1-4aba-9fc8-cb40d296cde3"],
Cell[CellGroupData[{
Cell[9311, 275, 419, 9, 46, "Input",ExpressionUUID->"75b43d46-ed09-4730-8933-71beb009e4e5"],
Cell[9733, 286, 15707, 298, 207, "Output",ExpressionUUID->"4821b2dd-a4b3-4f6e-b54f-a37102b7c679"]
}, Open  ]],
Cell[25455, 587, 358, 7, 80, "Item",ExpressionUUID->"d38102dd-8d96-4b90-9f67-f9faf3d95380"],
Cell[25816, 596, 310, 9, 147, "Program",ExpressionUUID->"32725ede-324d-4927-a263-5cdbc0232031"],
Cell[26129, 607, 210, 5, 49, "Item",ExpressionUUID->"e8fc5fff-6cc8-47fa-bd1f-8fd99eff111d"],
Cell[26342, 614, 176, 3, 73, "Program",ExpressionUUID->"78195558-cc67-4b81-849f-456136dee505"],
Cell[26521, 619, 319, 5, 49, "Item",ExpressionUUID->"ba26491d-e509-4843-9ca1-87eae0c009a0"],
Cell[26843, 626, 297, 4, 75, "ExternalLanguage",ExpressionUUID->"43ad247d-7d1c-490e-a2ef-a10a1acec96a"],
Cell[27143, 632, 175, 3, 49, "Item",ExpressionUUID->"64dfa841-5ce5-41a4-a98b-ada98ae1002c"],
Cell[27321, 637, 284, 10, 196, "Program",ExpressionUUID->"a481643b-2565-4760-938a-e4adacba78d3"],
Cell[27608, 649, 197, 3, 49, "Item",ExpressionUUID->"a427dacd-3353-4ab8-a6e4-955aa670e9e6"],
Cell[27808, 654, 139, 3, 73, "Program",ExpressionUUID->"54022589-be09-4683-bde2-be961fb196ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27984, 662, 237, 4, 81, "Subsection",ExpressionUUID->"dfb01a05-4803-4985-a8a2-48119b0db8f1"],
Cell[CellGroupData[{
Cell[28246, 670, 640, 16, 212, "Input",ExpressionUUID->"b9c76a4c-ef64-4095-8ac4-1df3ac85c607"],
Cell[28889, 688, 844, 19, 146, "Output",ExpressionUUID->"789bd579-87ce-4940-b986-87337cdfd4c1"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[29782, 713, 161, 3, 55, "Subsection",ExpressionUUID->"3b4ad246-197e-4aac-a374-19f4535adc60"],
Cell[CellGroupData[{
Cell[29968, 720, 499, 14, 296, "ExternalLanguage",ExpressionUUID->"6438af36-83fc-4a6b-af1f-d732b6350e9f"],
Cell[30470, 736, 264, 3, 84, "Output",ExpressionUUID->"c8d60b2f-c8f2-45d0-8860-6c6926ce747b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30771, 744, 402, 12, 296, "ExternalLanguage",ExpressionUUID->"38fd23e4-81e9-47d1-941f-2d435b7ddc39"],
Cell[31176, 758, 191, 2, 52, "Output",ExpressionUUID->"d7aadcf4-2724-4cd3-84b5-65914122cbe6"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[31416, 766, 227, 4, 55, "Subsection",ExpressionUUID->"34aa431b-2fd2-4fd3-8904-aa87ac1f8f5c"],
Cell[31646, 772, 732, 18, 171, "Input",ExpressionUUID->"bd344ddc-1653-4c51-839b-152659bc4561"],
Cell[32381, 792, 208, 2, 75, "ExternalLanguage",ExpressionUUID->"a41d7087-45cb-4179-a0fa-b5e0d60ce2c3"],
Cell[CellGroupData[{
Cell[32614, 798, 533, 17, 369, "ExternalLanguage",ExpressionUUID->"b91605cc-0168-4580-aba2-3ca4c2834489"],
Cell[33150, 817, 379, 8, 52, "Output",ExpressionUUID->"2c2febe7-93f1-419b-a861-e3c7a7627a97"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33566, 830, 195, 2, 75, "ExternalLanguage",ExpressionUUID->"89b3e685-c8c6-4519-8303-76389dd2410d"],
Cell[33764, 834, 265, 3, 394, "Output",ExpressionUUID->"61fe04aa-c70b-402e-b394-3d679a82c3e6"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[34078, 843, 218, 4, 55, "Subsection",ExpressionUUID->"fee5d5b9-1ee4-4146-8208-af02b8295ba2"],
Cell[CellGroupData[{
Cell[34321, 851, 477, 16, 369, "ExternalLanguage",ExpressionUUID->"0b66d9bf-4192-4a36-bc91-45273a25699c"],
Cell[34801, 869, 2150, 44, 73, "Output",ExpressionUUID->"f3985b90-7614-4ba3-a028-bd6911b294e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36988, 918, 219, 4, 46, "Input",ExpressionUUID->"6155b027-6655-4366-a798-b4e72273bcd9"],
Cell[37210, 924, 208, 2, 177, "Output",ExpressionUUID->"d90c62b0-f4ce-45e2-97c7-ee5511fb03a6"]
}, Open  ]],
Cell[37433, 929, 252, 6, 80, "Item",ExpressionUUID->"ee6db7fe-87d7-45c3-9c1f-4115681e945d"],
Cell[CellGroupData[{
Cell[37710, 939, 440, 15, 320, "ExternalLanguage",ExpressionUUID->"2788f958-4fa8-4317-9b64-bb62fabef562"],
Cell[38153, 956, 2808, 57, 78, "Output",ExpressionUUID->"ee9a9516-d994-4d72-a29b-c6e590659b4e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40998, 1018, 272, 5, 45, "Input",ExpressionUUID->"88376c59-ce41-4f90-a3cc-38da549a00a5"],
Cell[41273, 1025, 1079, 23, 70, "Output",ExpressionUUID->"5d205a03-cf4c-4358-95af-5a1a8954013d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[42401, 1054, 174, 3, 55, "Subsection",ExpressionUUID->"93e14716-3ee7-4e68-a8a8-e757ab6a6370"],
Cell[42578, 1059, 160, 3, 49, "Item",ExpressionUUID->"ba7c913b-8f98-4b1d-aafb-599170239ba6"],
Cell[CellGroupData[{
Cell[42763, 1066, 289, 5, 46, "Input",ExpressionUUID->"1c14c9e4-5cd3-4e2a-baf0-7af39df93625"],
Cell[43055, 1073, 201, 2, 52, "Output",ExpressionUUID->"51f17773-1448-4a59-be56-0d2f631855e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43293, 1080, 218, 3, 46, "Input",ExpressionUUID->"0d3c48f3-0d60-493b-91aa-396217ba8641"],
Cell[43514, 1085, 14805, 284, 323, "Output",ExpressionUUID->"c2f07797-0607-4429-8da0-40fa11fa597e"]
}, Open  ]],
Cell[58334, 1372, 161, 3, 49, "Item",ExpressionUUID->"086bc695-1749-4c01-b2f9-ae6ff1b1a713"],
Cell[CellGroupData[{
Cell[58520, 1379, 368, 8, 46, "Input",ExpressionUUID->"3ece9ddb-9e57-49ce-9709-9625cb905dc1"],
Cell[58891, 1389, 782, 19, 146, "Output",ExpressionUUID->"7d3300e0-145a-4557-940f-d2b2dec2c6bf"]
}, Open  ]],
Cell[59688, 1411, 176, 3, 49, "Item",ExpressionUUID->"23ca6398-7b17-4fd9-ba56-921822f74874"],
Cell[59867, 1416, 748, 18, 345, "ExternalLanguage",ExpressionUUID->"96883d7a-b358-45c1-a395-711f73bbd78e"],
Cell[60618, 1436, 531, 11, 124, "ExternalLanguage",ExpressionUUID->"a58623d6-8a09-49f2-9cf4-8059e23c9158"],
Cell[61152, 1449, 154, 3, 49, "Item",ExpressionUUID->"2e236ce0-e115-46ee-8ea8-2a2a3d6e2167"],
Cell[61309, 1454, 499, 15, 271, "ExternalLanguage",ExpressionUUID->"95cfaf64-9d6e-4bf3-bd58-e446d0c493a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61845, 1474, 163, 3, 81, "Subsection",ExpressionUUID->"876704d8-9ccd-4b94-b39e-1a19b286d022"],
Cell[62011, 1479, 169, 3, 49, "Item",ExpressionUUID->"37677ffd-0ecd-44ef-a362-b29bf3d38164"],
Cell[CellGroupData[{
Cell[62205, 1486, 816, 25, 394, "ExternalLanguage",ExpressionUUID->"96924237-c780-40a5-90f7-2abaa81a6f46"],
Cell[63024, 1513, 3755, 73, 73, "Output",ExpressionUUID->"a6807252-bf06-41fb-984d-dbc3d8356233"]
}, Open  ]],
Cell[66794, 1589, 707, 11, 46, "Input",ExpressionUUID->"edd907a3-9714-4d10-be94-dbca47aef8d4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[67550, 1606, 164, 3, 103, "Chapter",ExpressionUUID->"7221e8c2-c383-46ee-836f-f97fb19b32b7"],
Cell[CellGroupData[{
Cell[67739, 1613, 975, 22, 320, "ExternalLanguage",ExpressionUUID->"891fbddd-5413-4c83-973d-d562c9bde03f"],
Cell[68717, 1637, 283, 7, 52, "Output",ExpressionUUID->"8f0356b2-dc9a-4ad8-8a69-5b7c20c96d86"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69037, 1649, 718, 17, 271, "ExternalLanguage",ExpressionUUID->"0b78abf4-d97e-4433-9c87-8976cee7f70b"],
Cell[69758, 1668, 473, 8, 52, "Output",ExpressionUUID->"8a88d4ff-016d-4df5-967c-f8d3df601d0d"]
}, Open  ]],
Cell[70246, 1679, 163, 3, 49, "Item",ExpressionUUID->"41a25776-b75b-496d-a456-029605003495"],
Cell[70412, 1684, 497, 15, 271, "ExternalLanguage",ExpressionUUID->"81eb6bdd-d51a-454d-b6b7-645555ac3d9f"],
Cell[CellGroupData[{
Cell[70934, 1703, 285, 7, 124, "ExternalLanguage",ExpressionUUID->"f6df8c61-a8f6-4c53-a434-9dae7d0711f9"],
Cell[71222, 1712, 317, 6, 52, "Output",ExpressionUUID->"59041e6d-4beb-4633-9034-f2cc289b6db4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71576, 1723, 215, 4, 46, "Input",ExpressionUUID->"5527ea0e-754c-4622-b265-459fbea56813"],
Cell[71794, 1729, 684, 16, 63, "Output",ExpressionUUID->"f0e062d7-1e17-43bd-b02b-7bbb8b65e191"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[72527, 1751, 158, 3, 103, "Chapter",ExpressionUUID->"e75496d4-c4b6-487b-859c-1fe7dab43b71"],
Cell[CellGroupData[{
Cell[72710, 1758, 168, 3, 81, "Subsection",ExpressionUUID->"c11ddc6a-a9b7-4de9-9a01-c78406e44bac"],
Cell[72881, 1763, 185, 3, 49, "Item",ExpressionUUID->"6b42cba5-4b77-4c3b-a6c7-fbe96017aede"],
Cell[73069, 1768, 313, 8, 100, "ExternalLanguage",ExpressionUUID->"e80077ce-f7c6-4404-ac1b-0a67881d9d53"],
Cell[73385, 1778, 351, 7, 49, "Item",ExpressionUUID->"980127cd-6c76-46a3-b12a-07b1ff0ffb4b"],
Cell[73739, 1787, 190, 3, 73, "Program",ExpressionUUID->"6beada1e-e412-422f-bfe9-126c966c0b89"],
Cell[73932, 1792, 165, 3, 49, "Item",ExpressionUUID->"0fd29a7b-4a01-480a-8cf8-fa3ae814d605"],
Cell[CellGroupData[{
Cell[74122, 1799, 396, 10, 124, "ExternalLanguage",ExpressionUUID->"1e22c7d1-f1be-4b5f-99d6-3acee22ac7ef"],
Cell[74521, 1811, 2350, 49, 73, "Output",ExpressionUUID->"82ccd171-f8bc-4b23-bbeb-403c913148d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76908, 1865, 221, 4, 46, "Input",ExpressionUUID->"ffdf2f04-edac-4097-91d0-d0fd3cfcee2a"],
Cell[77132, 1871, 265, 5, 52, "Output",ExpressionUUID->"81656d8e-35ce-4f58-bb62-70d0435043e7"]
}, Open  ]],
Cell[77412, 1879, 158, 3, 49, "Item",ExpressionUUID->"8afb3660-50c1-45e7-a99e-1b1c0abc7b30"],
Cell[CellGroupData[{
Cell[77595, 1886, 367, 9, 124, "ExternalLanguage",ExpressionUUID->"992e6bb9-fd7f-4cdf-959b-61c8624bbd97"],
Cell[77965, 1897, 2253, 47, 73, "Output",ExpressionUUID->"00c2de5c-db67-482d-83d9-63de7dd42fd7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80255, 1949, 219, 4, 46, "Input",ExpressionUUID->"31e35c0b-065e-4520-bd92-c9e36aeee7bb"],
Cell[80477, 1955, 342, 8, 52, "Output",ExpressionUUID->"5ea65291-069f-4df9-a454-c4615e3e5b5f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[80868, 1969, 159, 3, 81, "Subsection",ExpressionUUID->"5ec3e488-cf57-475a-9a8d-c291fe74a23b"],
Cell[81030, 1974, 215, 5, 49, "Item",ExpressionUUID->"ffc84861-f136-45f1-aa40-75a24313d54d"],
Cell[CellGroupData[{
Cell[81270, 1983, 330, 12, 247, "ExternalLanguage",ExpressionUUID->"95958729-7569-499a-8fd7-75cfb53fc57c"],
Cell[81603, 1997, 11953, 220, 93, "Output",ExpressionUUID->"368510cb-99b9-42e6-b0e7-cae47c96e25e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93593, 2222, 734, 17, 247, "ExternalLanguage",ExpressionUUID->"e93d9350-d40b-404d-8c11-f0223257b4a9"],
Cell[94330, 2241, 2385, 49, 73, "Output",ExpressionUUID->"470e16df-f6b2-48cc-acfe-7dcb7fcd68e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96752, 2295, 268, 5, 46, "Input",ExpressionUUID->"3de380e2-1366-4c07-a138-f8c3fcd033d7"],
Cell[97023, 2302, 311, 5, 52, "Output",ExpressionUUID->"05c8e603-5da6-4c93-9909-17736ac211cc"]
}, Open  ]],
Cell[97349, 2310, 338, 10, 49, "Item",ExpressionUUID->"47590c16-057e-4bf8-a014-d800f582bbd7"],
Cell[CellGroupData[{
Cell[97712, 2324, 506, 15, 296, "ExternalLanguage",ExpressionUUID->"07b71d31-205a-4ca9-a8c6-05ffccd166c9"],
Cell[98221, 2341, 2409, 49, 73, "Output",ExpressionUUID->"14aa880a-597e-465a-b759-c18ab4599551"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100667, 2395, 153, 3, 46, "Input",ExpressionUUID->"b2a15dfe-c812-4e84-a1bd-ededcdcc71f2"],
Cell[100823, 2400, 287, 5, 52, "Output",ExpressionUUID->"1b6e6dce-cb34-4eba-8091-6cb487434a6f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[101159, 2411, 182, 3, 81, "Subsection",ExpressionUUID->"d4117eda-f08f-4430-8a97-5e2cbca616f2"],
Cell[101344, 2416, 358, 8, 124, "ExternalLanguage",ExpressionUUID->"77c76f40-d3c8-487e-a435-d317a60e98c1"],
Cell[CellGroupData[{
Cell[101727, 2428, 435, 12, 198, "ExternalLanguage",ExpressionUUID->"6c265493-7963-4e56-881c-83ccfb623717"],
Cell[102165, 2442, 2168, 46, 73, "Output",ExpressionUUID->"bcf68323-e82a-471d-aefa-9d36f72783ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104370, 2493, 221, 4, 46, "Input",ExpressionUUID->"dbae75c7-b73c-48c4-bc83-633859371583"],
Cell[104594, 2499, 210, 5, 52, "Output",ExpressionUUID->"278acc7f-fd9e-436e-8691-d9f263bc0d0d"]
}, Open  ]],
Cell[104819, 2507, 188, 3, 49, "Item",ExpressionUUID->"81a864cb-ed9c-474e-a309-a7e7771b7ac5"],
Cell[105010, 2512, 915, 20, 271, "ExternalLanguage",ExpressionUUID->"315a1c46-8b29-4047-a09f-d284a0715894"],
Cell[105928, 2534, 188, 3, 49, "Item",ExpressionUUID->"5e564319-aaa9-4fa3-99e1-19459cb22040"],
Cell[CellGroupData[{
Cell[106141, 2541, 497, 17, 345, "ExternalLanguage",ExpressionUUID->"75044bb4-0dc5-4093-ab4b-00478d628a78"],
Cell[106641, 2560, 2432, 50, 73, "Output",ExpressionUUID->"1a26473a-2531-45f0-a80f-05e104bec651"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109110, 2615, 221, 4, 46, "Input",ExpressionUUID->"6e9b5f05-342d-4a2a-ba9a-bf350baec93f"],
Cell[109334, 2621, 365, 11, 52, "Output",ExpressionUUID->"7f13383b-bf2e-4a7d-bdd9-c49ddb486807"]
}, Open  ]],
Cell[109714, 2635, 224, 5, 49, "Item",ExpressionUUID->"a22b7c77-17fd-43cf-8924-6fd8a72b2b88"],
Cell[109941, 2642, 370, 11, 198, "ExternalLanguage",ExpressionUUID->"2d4d27b8-4112-4001-9b61-f2b826f5df09"],
Cell[110314, 2655, 194, 3, 49, "Item",ExpressionUUID->"666c6c77-e86d-4f1a-9b33-01ebd02680dc"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

